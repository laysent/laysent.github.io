{"version":3,"sources":["webpack:///./src/templates/til-category.js","webpack:///./src/components/til-post.js","webpack:///./src/components/katex.js","webpack:///./src/components/til.js"],"names":["TilCategoryTemplate","data","location","pageContext","nodes","allMarkdownRemark","edges","map","edge","node","headTitle","category","title","to","subtitle","keywords","meta","name","content","pageQuery","TilPost","render","this","props","withLink","date","html","itemScope","itemType","style","marginBottom","rhythm","toLowerCase","replace","className","fontSize","marginLeft","itemProp","dateTime","dangerouslySetInnerHTML","__html","React","Component","Katex","componentDidMount","document","body","querySelector","TIL","frontmatter","key","id"],"mappings":"8FAAA,mIAqCeA,UA9Ba,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACvCC,EAAQH,EAAKI,kBAAkBC,MAAMC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,QAGtDC,EAAS,qBAFMP,EAAbQ,SAEO,IACf,OACE,kBAAC,IAAD,CACET,SAAUA,EACVU,MAAM,SACNC,GAAG,QACHC,SAAUJ,GAEV,kBAAC,IAAD,CACEE,MAAOF,EACPK,SAAU,CAAC,aAAc,MAAO,OAAQ,WACxCb,SAAUA,IAEZ,kBAAC,IAAD,CACEc,KAAM,CACJ,CACEC,KAAK,SACLC,QAAQ,cAId,kBAAC,IAAD,CAAUd,MAAOA,MAOhB,IAAMe,EAAS,c,iGCnChBC,E,gLACJC,OAAA,WAAU,IAAD,EAC2CC,KAAKC,MAA/CC,EADD,EACCA,SAAUZ,EADX,EACWA,MAAOa,EADlB,EACkBA,KAAMd,EADxB,EACwBA,SAAUe,EADlC,EACkCA,KACzC,OACE,6BAASC,WAAS,EAACC,SAAS,iCAC1B,wBACEC,MAAO,CACLC,aAAcC,YAAO,OAGtBnB,EAECY,GACA,kBAAC,OAAD,CACEX,GAAE,QAAUY,EAAV,IAAkBb,EAAMoB,cAAcC,QAAQ,KAAM,KACtDC,UAAU,gBACVL,MAAO,CAAEM,SAAUJ,YAAO,IAAQK,WAAYL,YAAO,MAHvD,OASJ,2BACE,+BACE,0BAAMM,SAAS,gBAAgBC,SAAUb,GACtCA,MAGFd,GACD,qCAEE,kBAAC,OAAD,CAAME,GAAE,iBAAmBF,EAASqB,eACjCrB,IAIP,+BACE,0BAAMgB,WAAS,EAACC,SAAS,2BAA2BS,SAAS,UAA7D,SAA4E,0BAAMA,SAAS,QAAf,cAGhF,yBAAKE,wBAAyB,CAAEC,OAAQd,GAAQW,SAAS,gBACzD,+B,GAzCcI,IAAMC,WA+CbtB,O,sDCjDTuB,E,wLACJC,kBAAA,WAOMC,SAASC,KAAKC,cAAc,WAC9B,sC,EAGJ1B,OAAA,WACE,OAAO,M,UAbSoB,EAAMC,WAiBXC,O,+GCbTK,E,gLACJ3B,OAAA,WAAU,IACAjB,EAAUkB,KAAKC,MAAfnB,MACR,OACE,8BACE,kBAAC,IAAD,MACCA,EAAMG,KAAI,SAACE,GAAD,OACT,kBAAC,IAAD,CACEG,MAAOH,EAAKwC,YAAYrC,MACxBa,KAAMhB,EAAKwC,YAAYxB,KACvBd,SAAUF,EAAKwC,YAAYtC,SAC3Be,KAAMjB,EAAKiB,KACXwB,IAAKzC,EAAK0C,GACV3B,UAAQ,OAGZ,gCACE,kBAAC,IAAD,OAEF,+B,GAnBUiB,IAAMC,WAyBTM","file":"component---src-templates-til-category-js-54f94ab5f341d054bb2e.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport TilPosts from '../components/til'\nimport Helmet from 'react-helmet'\n\nconst TilCategoryTemplate = ({ data, location, pageContext }) => {\n  const nodes = data.allMarkdownRemark.edges.map(edge => edge.node);\n  const { category } = pageContext\n\n  const headTitle = `Things I Learned (${category})`;\n  return (\n    <Layout\n      location={location}\n      title=\"Latest\"\n      to=\"/til/\"\n      subtitle={headTitle}\n    >\n      <SEO\n        title={headTitle}\n        keywords={['JavaScript', 'Web', 'Blog', 'LaySent']}\n        location={location}\n      />\n      <Helmet\n        meta={[\n          {\n            name: `robots`,\n            content: `noindex`\n          }\n        ]}\n      />\n      <TilPosts nodes={nodes} />\n    </Layout>\n  );\n}\n\nexport default TilCategoryTemplate\n\nexport const pageQuery = graphql`\n  query TilCategory($category: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fields: { type: { eq: \"til\" } } frontmatter: { category: { eq: $category } } }\n    ) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            date(formatString: \"YYYY-MM-DD\")\n            title\n            category\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react';\nimport { rhythm } from '../utils/typography'\nimport { Link } from 'gatsby'\n\nclass TilPost extends React.Component {\n  render() {\n    const { withLink, title, date, category, html } = this.props\n    return (\n      <article itemScope itemType=\"http://schema.org/BlogPosting\">\n        <h1\n          style={{\n            marginBottom: rhythm(1 / 4),\n          }}\n        >\n          {title}\n          {\n            withLink &&\n            <Link\n              to={`/til/${date}_${title.toLowerCase().replace(/ /g, '-')}`}\n              className=\"no-link-style\"\n              style={{ fontSize: rhythm(1 / 2), marginLeft: rhythm(1 / 2) }}\n            >\n              ðŸ”—\n            </Link>\n          }\n        </h1>\n        <p>\n          <small>\n            <time itemProp=\"datePublished\" dateTime={date}>\n              {date}\n            </time>\n          </small>\n          {!!category && (\n            <small>\n              {` â€¢ `}\n              <Link to={`/til/category/${category.toLowerCase()}`}>\n                {category}\n              </Link>\n            </small>\n          )}\n          <small>\n            <span itemScope itemType=\"http://schema.org/Person\" itemProp=\"author\"> â€¢ by <span itemProp=\"name\">LaySent</span></span>\n          </small>\n        </p>\n        <div dangerouslySetInnerHTML={{ __html: html }} itemProp=\"articleBody\" />\n        <hr />\n      </article>\n    );\n  }\n}\n\nexport default TilPost\n","import React from 'react'\n\nclass Katex extends React.Component {\n  componentDidMount() {\n    /**\n     * Dynamically add KaTeX style support, only when KaTeX is detected.\n     * This will save a lot of space for compiled HTML pages,\n     * as most of the posts does not have math equations.\n     * Thus, no need to pre-compile KaTeX css into HTML <head>.\n     */\n    if (document.body.querySelector('.katex')) {\n      import('katex/dist/katex.min.css'/* webpackChunkName: \"katex\" */);\n    }\n  }\n  render() {\n    return null;\n  }\n}\n\nexport default Katex;\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport License from '../components/license';\nimport Katex from './katex'\nimport TilPost from './til-post'\n\nclass TIL extends React.Component {\n  render() {\n    const { nodes } = this.props;\n    return (\n      <main>\n        <Katex />\n        {nodes.map((node) => (\n          <TilPost\n            title={node.frontmatter.title}\n            date={node.frontmatter.date}\n            category={node.frontmatter.category}\n            html={node.html}\n            key={node.id}\n            withLink\n          />\n        ))}\n        <footer>\n          <License />\n        </footer>\n        <hr />\n      </main>\n    );\n  }\n}\n\nexport default TIL\n"],"sourceRoot":""}