{"version":3,"sources":["webpack:///./src/components/til-post.js","webpack:///./src/templates/til.js"],"names":["TilPost","render","this","props","withLink","title","date","category","html","itemScope","itemType","style","marginBottom","rhythm","to","toLowerCase","replace","className","fontSize","marginLeft","itemProp","dateTime","dangerouslySetInnerHTML","__html","React","Component","getTilPostLink","TilPostTemplate","post","data","markdownRemark","pageContext","previous","next","frontmatter","split","year","month","header","location","keywords","display","flexWrap","justifyContent","listStyle","padding","time","rel","pageQuery"],"mappings":"2JAIMA,E,gLACJC,OAAA,WAAU,IAAD,EAC2CC,KAAKC,MAA/CC,EADD,EACCA,SAAUC,EADX,EACWA,MAAOC,EADlB,EACkBA,KAAMC,EADxB,EACwBA,SAAUC,EADlC,EACkCA,KACzC,OACE,6BAASC,WAAS,EAACC,SAAS,iCAC1B,wBACEC,MAAO,CACLC,aAAcC,YAAO,OAGtBR,EAECD,GACA,kBAAC,OAAD,CACEU,GAAE,QAAUR,EAAV,IAAkBD,EAAMU,cAAcC,QAAQ,KAAM,KACtDC,UAAU,gBACVN,MAAO,CAAEO,SAAUL,YAAO,IAAQM,WAAYN,YAAO,MAHvD,OASJ,2BACE,+BACE,0BAAMO,SAAS,gBAAgBC,SAAUf,GACtCA,MAGFC,GACD,qCAEE,kBAAC,OAAD,CAAMO,GAAE,iBAAmBP,EAASQ,eACjCR,IAIP,+BACE,0BAAME,WAAS,EAACC,SAAS,2BAA2BU,SAAS,UAA7D,SAA4E,0BAAMA,SAAS,QAAf,cAGhF,yBAAKE,wBAAyB,CAAEC,OAAQf,GAAQY,SAAS,gBACzD,+B,GAzCcI,IAAMC,WA+CbzB,O,wMC3Cf,SAAS0B,EAAepB,EAAMD,GAC5B,MAAM,QAASC,EAAf,IAAuBD,EAAMU,cAAcC,QAAQ,KAAM,K,IAGrDW,E,gLACJ1B,OAAA,WACE,IAAM2B,EAAO1B,KAAKC,MAAM0B,KAAKC,eADtB,EAEoB5B,KAAKC,MAAM4B,YAA9BC,EAFD,EAECA,SAAUC,EAFX,EAEWA,KAFX,EAG2BL,EAAKM,YAA/B5B,EAHD,EAGCA,KAAMC,EAHP,EAGOA,SAAUF,EAHjB,EAGiBA,MAHjB,EAKeC,EAAK6B,MAAM,KAA1BC,EALA,KAKMC,EALN,KAMDC,EAAM,qBAAwBF,EAAxB,IAAgCC,EAAhC,IACZ,OACE,kBAAC,IAAD,CAAQE,SAAUrC,KAAKC,MAAMoC,SAAUlC,MAAOiC,EAAQxB,GAAE,QAAUsB,EAAV,IAAkBC,GACxE,kBAAC,IAAD,CAAKhC,MAAOA,EAAOkC,SAAUrC,KAAKC,MAAMoC,SAAUC,SAAU,CAAC,aAAc,MAAO,OAAQ,aAC1F,kBAAC,IAAD,CACEnC,MAAOA,EACPC,KAAMA,EACNC,SAAUA,EACVC,KAAMoB,EAAKpB,OAEb,gCACE,kBAAC,IAAD,OAEF,wBACEG,MAAO,CACLC,aAAcC,YAAO,MAGzB,6BACE,wBACEF,MAAO,CACL8B,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGb,GACC,kBAAC,OAAD,CAAMlB,GAAIY,EAAeM,EAASc,KAAMd,EAAS3B,OAAQ0C,IAAI,QAA7D,KACKf,EAAS3B,QAIlB,4BACG4B,GACC,kBAAC,OAAD,CAAMnB,GAAIY,EAAeO,EAAKa,KAAMb,EAAK5B,OAAQ0C,IAAI,QAClDd,EAAK5B,MADR,W,GA5CcmB,IAAMC,WAwDrBE,YAER,IAAMqB,EAAS","file":"component---src-templates-til-js-87e63848f60be6e34462.js","sourcesContent":["import React from 'react';\nimport { rhythm } from '../utils/typography'\nimport { Link } from 'gatsby'\n\nclass TilPost extends React.Component {\n  render() {\n    const { withLink, title, date, category, html } = this.props\n    return (\n      <article itemScope itemType=\"http://schema.org/BlogPosting\">\n        <h1\n          style={{\n            marginBottom: rhythm(1 / 4),\n          }}\n        >\n          {title}\n          {\n            withLink &&\n            <Link\n              to={`/til/${date}_${title.toLowerCase().replace(/ /g, '-')}`}\n              className=\"no-link-style\"\n              style={{ fontSize: rhythm(1 / 2), marginLeft: rhythm(1 / 2) }}\n            >\n              üîó\n            </Link>\n          }\n        </h1>\n        <p>\n          <small>\n            <time itemProp=\"datePublished\" dateTime={date}>\n              {date}\n            </time>\n          </small>\n          {!!category && (\n            <small>\n              {` ‚Ä¢ `}\n              <Link to={`/til/category/${category.toLowerCase()}`}>\n                {category}\n              </Link>\n            </small>\n          )}\n          <small>\n            <span itemScope itemType=\"http://schema.org/Person\" itemProp=\"author\"> ‚Ä¢ by <span itemProp=\"name\">LaySent</span></span>\n          </small>\n        </p>\n        <div dangerouslySetInnerHTML={{ __html: html }} itemProp=\"articleBody\" />\n        <hr />\n      </article>\n    );\n  }\n}\n\nexport default TilPost\n","import React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport License from '../components/license'\nimport TilPost from '../components/til-post'\nimport { rhythm } from '../utils/typography'\n\nfunction getTilPostLink(date, title) {\n  return `/til/${date}_${title.toLowerCase().replace(/ /g, '-')}`;\n}\n\nclass TilPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const { previous, next } = this.props.pageContext\n    const { date, category, title } = post.frontmatter;\n\n    const [year, month] = date.split('-')\n    const header = `Things I Learned (${year}-${month})`\n    return (\n      <Layout location={this.props.location} title={header} to={`/til/${year}/${month}`}>\n        <SEO title={title} location={this.props.location} keywords={['JavaScript', 'Web', 'Blog', 'LaySent']} />\n        <TilPost\n          title={title}\n          date={date}\n          category={category}\n          html={post.html}\n        />\n        <footer>\n          <License />\n        </footer>\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <nav>\n          <ul\n            style={{\n              display: `flex`,\n              flexWrap: `wrap`,\n              justifyContent: `space-between`,\n              listStyle: `none`,\n              padding: 0,\n            }}\n          >\n            <li>\n              {previous && (\n                <Link to={getTilPostLink(previous.time, previous.title)} rel=\"prev\">\n                  ‚Üê {previous.title}\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && (\n                <Link to={getTilPostLink(next.time, next.title)} rel=\"next\">\n                  {next.title} ‚Üí\n                </Link>\n              )}\n            </li>\n          </ul>\n        </nav>\n      </Layout>\n    )\n  }\n}\n\nexport default TilPostTemplate\n\nexport const pageQuery = graphql`\n  query TilPost($time: Date!, $title: String!) {\n    markdownRemark(\n      fields: { type: { eq: \"til\" } } frontmatter: { date: { eq: $time } title: { eq: $title } }\n    ) {\n      id\n      html\n      frontmatter {\n        title\n        category\n        date(formatString: \"YYYY-MM-DD\")\n      }\n    }\n  }\n`\n"],"sourceRoot":""}