{"data":{"site":{"siteMetadata":{"blogTitle":"LaySent's Blog","author":"LaySent"}},"markdownRemark":{"id":"172a6219-8061-5776-a340-5ca21dd3aa56","html":"<p><code class=\"language-text\">prefetch</code> 的优先级最低，<code class=\"language-text\">preload</code> 的优先级非常高，仅次于首屏加载需要用到的 css，字体，阻塞脚本，图片等资源。</p>\n<p><code class=\"language-text\">prefetch</code> 的网络请求在页面切换的时候不会停止，<code class=\"language-text\">preload</code> 会在切面切换的时候终止未完成的请求。</p>\n<p><code class=\"language-text\">preload</code> 的主要目的，是显式得告诉浏览器，哪些资源会很快用到，让浏览器有限加载。<code class=\"language-text\">prefetch</code> 则主要针对的是之后页面\n可能会用到的资源，让浏览器在空闲的时候可以优先加载。</p>\n<p>在 <code class=\"language-text\">preload</code> 或 <code class=\"language-text\">prefetch</code> 中增加 <code class=\"language-text\">as</code> 属性，可以确定加载资源的类型。不同类型在浏览器中有不同的加载优先级，指定\n<code class=\"language-text\">as</code> 有助于浏览器分配更合适的优先级。</p>\n<p>加载后的资源，如果 HTTP 头显示允许缓存，则被放置在 HTTP 缓存中；如果 HTTP 头显示不能缓存，则被防止在当先渲染进程的\n内存缓存中。<code class=\"language-text\">prefetch</code> 的资源，无论是否允许缓存，都至少在内存缓存中停留五分钟。</p>\n<p>字体文件预加载需要提供 <code class=\"language-text\">crossorigin=anonymous</code>。因为字体文件本身是以这种方式加载的，如果不加上这个属性，会导致\n字体文件真正在加载的时候，额外重新加载一次，而不是使用缓存。XHR 默认也是不带 cookie 请求的（TODO ？），故也需要加上\n这个属性来预加载。</p>\n<section><h1>参考文献</h1><p><a href=\"https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity\">https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity</a></p></section>","frontmatter":{"title":"Preload & Prefetch","date":"2019-03-08","modified":"2019-03-08","description":"这篇文章介绍各种常见的 Lint 工具"}}},"pageContext":{"slug":"/Preload-Prefetch/","previous":{"fields":{"slug":"/integrity-and-fetch/","type":"blog"},"frontmatter":{"title":"integrity & fetch","category":"Web","tags":"JavaScript, Web"}},"next":{"fields":{"slug":"/lint-tools/","type":"draft"},"frontmatter":{"title":"lint tools","category":"Tools","tags":"Tools"}}}}