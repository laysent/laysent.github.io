{"data":{"site":{"siteMetadata":{"title":"LaySent's Site"}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"什么是 alias 在一个大型 web…","fields":{"slug":"/alias-for-web-project/"},"timeToRead":1,"frontmatter":{"date":"2019-04-16","title":"Web 应用的 Alias 配置","description":"本文主要介绍一个 JavaScript / TypeScript 项目中，可以用到的各种 alias 配置","tags":"Tools, JavaScript","category":"Tools"}}},{"node":{"excerpt":"访客端 storybook storybook 是一个库，用于展示 React 组件的效果的。在访客端项目中，这个功能已经基本不用了。如果需要重新使用，需要先修复   目录下 webpack.config.js…","fields":{"slug":"/handover/"},"timeToRead":19,"frontmatter":{"date":"2019-04-09","title":"交接","description":"","tags":"","category":""}}},{"node":{"excerpt":"访客端 storybook storybook 是一个库，用于展示 React 组件的效果的。在访客端项目中，这个功能已经基本不用了。如果需要重新使用，需要先修复   目录下 webpack.config.js…","fields":{"slug":"/handover1/"},"timeToRead":33,"frontmatter":{"date":"2019-04-09","title":"交接","description":"","tags":"","category":""}}},{"node":{"excerpt":"Installation 用 Homebrew 安装 ledger。 如果安装很慢的话，可以考虑用镜像来加速（至少加速   的部分）。 镜像 还原步骤 https://stackoverflow.com/questions/55464231/when-command-brew…","fields":{"slug":"/ledger/"},"timeToRead":1,"frontmatter":{"date":"2019-04-05","title":"ledger","description":"","tags":"Tools","category":"Tools"}}},{"node":{"excerpt":"spec 开发者需要用户从 CDN 上下载脚本，而且必须相信这些下载的内容是符合预期的。攻击者可以利用这一点，诱使用户下载到不正确的脚本，从而达到攻击的手段。诱使的方法有：DNS 污染或者直接修改 CDN 上的文件内容。 注意到，TLS 也好，HSTS 也好，pinned…","fields":{"slug":"/notes-of-subresource-integrity-spec/"},"timeToRead":2,"frontmatter":{"date":"2019-03-31","title":"Subresource Integrity Spec 笔记","description":"","tags":"Web","category":"Web"}}},{"node":{"excerpt":"在线演示 本文主要介绍，当含有   的文件加载失败时，可行的处理方案。 Subresource Integrity 的问题 SRI…","fields":{"slug":"/subresource-integrity-and-error-handling/"},"timeToRead":2,"frontmatter":{"date":"2019-03-27","title":"Subresource Integrity 出错时的处理方案","description":"Subresource Integirty (SRI) 会在资源文件不匹配的情况下加载失败，从而影响用户正常使用。本文介绍当出现这种情况时，如何将问题记录并汇报给预警服务器，并启用备用资源文件保证用户的正常使用。","tags":"Web, JavaScript","category":"Web"}}},{"node":{"excerpt":"一份好的 Git Commit，可以极大的帮助他人（包括几个月后的自己）理解代码改动。如果是团队工作，好的 Git Message 格式更可以统一形式，提高团队协作的效率。本文将从写好 Git Commit 的目的出发，探讨两个问题：什么样的 Git Message…","fields":{"slug":"/git-commit-message/"},"timeToRead":3,"frontmatter":{"date":"2019-03-24","title":"Git Commit Message","description":"介绍 Git Commit Message 规范与实践","tags":"Tools","category":"Tools"}}},{"node":{"excerpt":"Furigana 在日语漫画中，经常看到 ，也被称为振假名或 。根据  wiki  的解释，Ruby 一词主要源自英国对 5.5 号字体的传统称呼（和编程语言 Ruby…","fields":{"slug":"/html5-and-furigana/"},"timeToRead":5,"frontmatter":{"date":"2019-03-16","title":"Html5 的旁注标记","description":"本文主要介绍了 HTML5 中的旁注标记 ruby 及其使用","tags":"Web","category":"Web"}}},{"node":{"excerpt":"表现区别 （ 出处 ） 转化方式  提供了转化 JPEG 文件的相关功能。在 Node.js 中，可以使用   包对图片进行处理。 如无需对 JPEG 图片进行有损压缩，只希望把 Baseline JPEG 转化为 Progressive JPEG…","fields":{"slug":"/baseline-and-progressive-jpeg/"},"timeToRead":3,"frontmatter":{"date":"2019-03-13","title":"Baseline & Progressive JPEG","description":"主要介绍了 Web 中使用 Baseline 和 Progressive JPEG 的特点以及图片间的转化方式","tags":"Web, Graphics","category":"Web"}}},{"node":{"excerpt":"录制视频 OSX 自带的 QuickTime Player 支持屏幕的录制功能。具体的操作步骤如下： 打开 QuickTime Player 点击菜单中的 File => New Screen Recording…","fields":{"slug":"/Mac-OS-X-电脑录屏/"},"timeToRead":1,"frontmatter":{"date":"2019-03-08","title":"Mac OS X 电脑录屏","description":"这篇文章介绍各种常见的 Lint 工具","tags":"Tools","category":"Tools"}}},{"node":{"excerpt":" 的优先级最低，  的优先级非常高，仅次于首屏加载需要用到的 css…","fields":{"slug":"/Preload-Prefetch/"},"timeToRead":1,"frontmatter":{"date":"2019-03-08","title":"Preload & Prefetch","description":"这篇文章介绍各种常见的 Lint 工具","tags":"Tools","category":"Tools"}}},{"node":{"excerpt":"一个好的 lint 工具，应该满足的条件： 插件化\n提供各类插件，可以选择使用或不使用其中的部分，达到规则个性化的目的 定制化\n类似于上一条，定制化在于对插件提供个性化的配置，规则不是写死的 JavaScript TypeScript CSS Markdown Git…","fields":{"slug":"/lint-tools/"},"timeToRead":1,"frontmatter":{"date":"2019-03-08","title":"lint tools","description":"这篇文章介绍各种常见的 Lint 工具","tags":"Tools","category":"Tools"}}},{"node":{"excerpt":"根据目前的 Subresrouce Integrity  规格 ，当前   只适用于   和  。在其中的 Note 里，提到了未来支持其他所有资源类型的可能性： A future revision of this specification is likely to…","fields":{"slug":"/integrity-and-fetch/"},"timeToRead":2,"frontmatter":{"date":"2019-03-07","title":"integrity & fetch","description":"这篇文章主要介绍 fetch 中 integrity 字段的用法，以及如何用此功能给其他资源文件提供 integrity 的校验功能（如图片），附带 React 示例代码。","tags":"JavaScript, Web","category":"Web"}}},{"node":{"excerpt":"…","fields":{"slug":"/random-sampling/"},"timeToRead":10,"frontmatter":{"date":"2019-02-19","title":"Random Sampling","description":"介绍了等概率与不等概率情况下如何对集合进行随机抽样，涵盖了已知大小与未知大小集合（数据流）的情况，涉及到 Fisher-Yates Shuffle 算法，Reservoir Sampling 算法以及 Weighted Random Sampling 算法","tags":"Algorithm, Math","category":"Algorithm"}}},{"node":{"excerpt":"check https://webmasters.stackexchange.com/questions/98424/ blogposting-publisher-logo-logo-itemtype-has-an-invalid-value-on-google-struct…","fields":{"slug":"/schema-html/"},"timeToRead":1,"frontmatter":{"date":"2019-02-09","title":"Schema.org","description":"介绍 Schema.org","tags":"Web, SEO","category":"Web"}}},{"node":{"excerpt":"原文 （注：译文删去了一些过时的内容。删去内容不影响阅读理解。） 很多人在上一篇博文的评论中指出，在 HSV 色彩空间中选取一组等距颜色并不能最终得到视觉上的等距效果。这篇文章将解释 HSV 的主要问题出在哪里以及该如何解决这个问题。 HSV…","fields":{"slug":"/how-to-avoid-equidistant-hsv-colors/"},"timeToRead":2,"frontmatter":{"date":"2019-02-07","title":"（译）如何避免 HSV 等距颜色","description":"介绍了如何为什么应该使用 HCL 色彩空间来选取等距颜色，并介绍了一些可以使用的工具","tags":"Translate, Graphics","category":"Web"}}},{"node":{"excerpt":"背景 这次研究的出发点，是希望可以了解某服务提供商 API 的调用规则，从而可以写一个定制化的服务为个人所用。 通过前期的研究，发现这里的网络请求主要是通过一个 signature 参数对请求的有效性进行验证。如果参数重的 signature…","fields":{"slug":"/android-app-reverse-engineering-tutorial/"},"timeToRead":6,"frontmatter":{"date":"2019-01-20","title":"Android App 逆向工程初探","description":"这篇文章主要讲关于如何逆向某 Android 程序，并找到网络请求中 querstring 里 signature 计算方法的过程","tags":"Android, Reverse Engineering","category":"Android"}}},{"node":{"excerpt":"本文主要介绍将 Skype 开源的 SILK v3 解码器从 C 语言库移植到 Node.js 环境的流程，主要用到了 node-gyp 以及 Node.js 提供的 N-API。移植后的包可以在 这里 找到 ，同时在  GitHub  开源了代码。 目的 原 C…","fields":{"slug":"/migration-from-c-library-to-node-addon/"},"timeToRead":4,"frontmatter":{"date":"2019-01-19","title":"使用 N-API 移植现有 C 语言库","description":"如何使用 N-API 与 node-gyp，将一个现有的 C 语言库移植为 Node.js 可直接运行的 C/C++ 插件","tags":"Node.js, JavaScript","category":"Node.js"}}},{"node":{"excerpt":"在线演示 当前，大量的前端引用资源文件是放在 CDN 上进行加速的。因为文件不存放在自己的服务器上，这些文件的安全性实际上是交由 CDN 来保证的。攻击者可以利用这一点，诱使用户下载到不正确的脚本，从而达到攻击的手段。诱使的方法多种多样，比如 DNS 污染，或者直接攻陷 CDN…","fields":{"slug":"/subresource-integrity/"},"timeToRead":4,"frontmatter":{"date":"2019-01-06","title":"Subresource Integrity","description":"Subresource Integrity (SRI) 的基本用法、目的、行为，以及配合 Preload，Prefetch 等一同使用时的注意事项","tags":"Web, JavaScript","category":"Web"}}}]}},"pageContext":{}}