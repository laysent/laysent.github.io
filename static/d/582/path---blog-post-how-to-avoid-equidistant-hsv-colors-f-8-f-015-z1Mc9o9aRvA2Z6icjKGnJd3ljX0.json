{"data":{"site":{"siteMetadata":{"blogTitle":"LaySent's Blog","author":"LaySent"}},"markdownRemark":{"id":"6dfe84b2-1abe-5ad9-99b6-62eca5a4f5e6","html":"<blockquote>\n<p><a href=\"https://www.vis4.net/blog/2011/12/avoid-equidistant-hsv-colors/\">原文</a></p>\n</blockquote>\n<p>（注：译文删去了一些过时的内容。删去内容不影响阅读理解。）</p>\n<p>很多人在上一篇博文的评论中指出，在 HSV 色彩空间中选取一组等距颜色并不能最终得到视觉上的等距效果。这篇文章将解释 HSV 的主要问题出在哪里以及该如何解决这个问题。</p>\n<section><h2>HSV 的问题在哪里</h2><p>简单来说，主要的问题就在于，HSV 中的 Value 值只是物理亮度的测量值，而与视觉上的亮度无关。因此，满饱和度黄色和蓝色的 Value 值是一样的。HSL 色彩空间也有同样的问题。为了说明这个问题，下图展示了一组六个颜色，每个颜色都有相同的 Value 值。第二行给出了经过 Photoshop 处理，转成灰度后的颜色。</p><p><img src=\"https://www.vis4.net/blog/images/old/equivalue-hsv.png\" alt=\"Color with Same Value\"></p><p><img src=\"https://www.vis4.net/blog/images/old/equivalue-hsv-grayscale.png\" alt=\"Color to Grayscale\"></p><p>除了亮度与色调（Hue）强相关的问题之外，在同一个色调内，亮度的变化也不是线性的。举例来说，下图给出了一组 HSL 下颜色的，第二和第三种红色间的亮度差异看上去明显大于第三种和第四种红色之间的亮度\b差异。更糟糕的是，这种亮度的差异在不同的色调下是不一样的。这一点，从蓝色的对比中不难看出。</p><p><img src=\"https://www.vis4.net/blog/images/old/hsv-reds.png\" alt=\"Red Color with Different Hue\"></p><p><img src=\"https://www.vis4.net/blog/images/old/Bildschirmfoto-2011-12-12-um-22.35.07.png\" alt=\"Blue Color with Different Hue\"></p><p>总结来说，这些应该足以构成避免使用 HSV/HSL 等距颜色的理由了。那么问题来了，应该怎么做呢？</p></section>\n<section><h2>懒汉的方案：用 ColorBrewer</h2><p>问题在于，我们应该怎么处理？之前的评论里，有人提到了 <a href=\"http://colorbrewer2.com/\">ColorBrewer</a>。如果只是需要选取几个颜色，而不希望关注太多的细节，那么这个方案是非常合适的。下面给出了几组 ColorBrewer 选色。</p><p><img src=\"https://www.vis4.net/blog/images/old/Bildschirmfoto-2011-12-12-um-22.57.54.png\" alt=\"ColorBrewer Color Scale\"></p><p>这一方案的弊端在于，可以使用的颜色被限制在有限的几种中。对于每一组颜色，大概给出了三到九种不同的颜色供选择。另一个弊端在于，如果只能在事先给定好的色彩集里选择，\b艺术创作的自由性也就被剥夺了。当然，最重要的是，选择已有的方案，就不怎么有趣了，不是吗？</p></section>\n<section><h2>色彩极客的方案：拥抱 CIE L*a*b*</h2><p>现在，你最好准备来学习一些深度的色彩知识。感谢 <a href=\"http://davidad.net/colorviz/\">David Dalrymple 的介绍</a>，让我终于能跨入 CIE L*a*b* 色彩空间的领域。总结来说，L*a*b* 色彩空间由一个亮度值（Lightness）和两个双极颜色值 <strong>a</strong>（黄-蓝）和 <strong>b</strong>（绿-品红）组成。亮度值取值范围从 0% 到 100%。<strong>a</strong> 和 <strong>b</strong> 的取值范围定义则比较复杂。主要的问题在于，L*a*b* 色彩空间比 RGB 色彩空间拥有更多的颜色。举例来说，<strong>a</strong> 的取值范围和亮度相关，也和第二个色彩通道相关。另外一个问题在于，通过融合四种颜色来选取色彩比较困难。为了解决这些问题，David Dalrymple 提出了一种 L*a*b* 色彩空间的转化方式。</p></section>\n<section><h2>HCL：让 L*a*b* 色彩空间更易用</h2><p>方法很简单。这里用 <strong>a</strong> 和 <strong>b</strong> 的值去计算颜色的角度（色调 Hue）和半径（色度 Chroma）。这就是 Hue-Chroma-Lightness 色彩空间。就像 Maureen Stone 指出的，HCL 空间其实就是 CIE L*a*b* 色彩空间的圆柱坐标变换。这里的 L 值和 <a href=\"http://en.wikipedia.org/wiki/Munsell_color_system\">Munsell 色彩体系</a> 也比较相近。尽管依然存在颜色不属于 RGB 色彩空间（特别是当你增加饱和度的时候），但是现在看上去这个已经可以投入使用了。举例来说，如果选取一组 HCL 空间中拥有相同 L 值的等距颜色，结果已经好得多了。事实上，如果将这些颜色转化为灰度，最终的会得到完全一样的灰度值。当然，这不是什么意外惊喜。我猜 Photoshop 本身也是使用 CIE L*a*b* 来进行灰度转换的。</p></section>\n<section><h2>现在，来选取些颜色看看……</h2><p>很高兴你读到了这里，接下来事情就变得有趣了。为了更好的理解不同色彩空间下的等距颜色，我在色彩选择器种加上了线性梯度的展示。欢迎来下方的链接查看 HCL 色彩空间的展示效果与 L*a*b*，HSV，HSL 或者 RGB 的区别。<del>Also, it’s interesting to directly compare the interpolated colors across different color spaces:</del></p></section>\n<section><h2>很好！那么该如何获这些颜色呢？</h2><p>为了让事情变得简单，我把这些打包制作成了一个 JavaScript 的包，<a href=\"https://github.com/gka/chroma.js\">chroma.js</a>。这里面包含了虽然简单但非常实用的 API，可以在 <a href=\"https://github.com/gka/chroma.js\">GitHub</a> 上了解更多。欢迎报 Bug。</p></section>\n<section><h2>更新：还有更简单的方法吗？</h2><p>当然！现在有两款基于 Web 的工具使用 Chroma.js 来帮助你选取颜色。</p><p><img src=\"https://www.vis4.net/blog/images/old/screenshot-2012-06-24-um-20.32.11.png\" alt=\"Colors for data scientists\"></p><p>第一款是 <a href=\"http://jiminy.medialab.sciences-po.fr/tools/palettes/index.php\">Colors for data scientists</a>，由 Mathieu Jacomy 制作，提供了高级工具来创建、修正和完善色彩板。Mathieu 也写了额外的阐述，为什么使用 L*a*b* 色彩空间自动创建色彩板是更好的选择。</p><p><img src=\"https://www.vis4.net/blog/images/old/screenshot-2012-06-24-um-20.28.57.png\" alt=\"HCL colorpicker for data\"></p><p>如果你只是想从 HCL 色彩空间中快速得选取一些颜色，那么<a href=\"http://tristen.ca/hcl-picker/\">第二款工具</a>就是合适的选择。这款工具\b是基于本篇所使用的色彩选择器开发的，同时它允许你复制 \bhex 色彩码。此外，\b工具还提供了色彩等值线图的预览功能，提供了和 ColorBrewer 类似的体验。你也可以记录书签并分享你选择的颜色板。这款工具由 <a href=\"http://tristen.ca/\">Tristen Brown</a> 开发完成。</p></section>\n<section><h2>更新2:在 d3.js 种使用 HCL</h2><p>现在，在 <a href=\"http://d3js.org/\">d3.js</a> 可视化库中使用 HCL 色彩空间（或者 Mike 称之为 CIE LCh），可以使用这一款<a href=\"https://github.com/d3/d3-plugins/tree/master/cie\">插件</a>。可以在<a href=\"http://bl.ocks.org/3014589\">这里</a>看到实际的使用效果。为了更好的展示如何使用 HCL 插件，我写了这个简单的示例代码（在线演示见<a href=\"http://bl.ocks.org/3088439\">这里</a>）：</p><div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> color <span class=\"token operator\">=</span> d3<span class=\"token punctuation\">.</span>scale<span class=\"token punctuation\">.</span><span class=\"token function\">linear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">.</span><span class=\"token function\">domain</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// min/max of data</span>\n   <span class=\"token punctuation\">.</span><span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"#FDFFCB\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#232942\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">.</span><span class=\"token function\">interpolate</span><span class=\"token punctuation\">(</span>d3<span class=\"token punctuation\">.</span>cie<span class=\"token punctuation\">.</span>interpolateLch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nd3<span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"body\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">selectAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">enter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">style</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"background\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token function\">color</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div></section>","frontmatter":{"title":"（译）如何避免 HSV 等距颜色","date":"2019-02-07","modified":"2019-02-07","description":"介绍了如何为什么应该使用 HCL 色彩空间来选取等距颜色，并介绍了一些可以使用的工具"}}},"pageContext":{"slug":"/how-to-avoid-equidistant-hsv-colors/","previous":{"fields":{"slug":"/android-app-reverse-engineering-tutorial/","type":"blog"},"frontmatter":{"title":"Android App 逆向工程初探","category":"Android","tags":"Android, Reverse Engineering"}},"next":{"fields":{"slug":"/schema-html/","type":"draft"},"frontmatter":{"title":"Schema.org","category":"Web","tags":"Web, SEO"}}}}