{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/post/cicada-principle/","webpackCompilationHash":"bda10dc66575c4b19d6c","result":{"data":{"site":{"siteMetadata":{"blogTitle":"LaySent's Blog","author":"LaySent"}},"markdownRemark":{"id":"6194f9f0-3aa4-55ed-aea0-4804a6bec738","html":"<section><h2>背景</h2><blockquote>\n<p><a href=\"https://zh.wikipedia.org/wiki/%E5%91%A8%E6%9C%9F%E8%9D%89\">周期蝉</a>属（学名：Magicicada）是半翅目蝉科的一属，主要分布于北美，其生命周期为十三年或十七年，也被称为十七年蝉或十三年蝉。幼虫孵化后即钻入地下，一生绝大多数时间在地下度过，靠吸食树根的汁液生存。在地下生活十三年或十七年后，同种蝉的若虫同时破土而出，在 4-6 周内羽化、交配、产卵、死亡，而卵孵化后进入下一个生命周期。因此某一年份在美国东部一些地方每过十七或十三年就会突然出现的大量的蝉，成为一种奇景。\n（<a href=\"https://zh.wikipedia.org/wiki/%E5%91%A8%E6%9C%9F%E8%9D%89\">source</a>）</p>\n</blockquote><p>对于周期蝉来说，这样的生命周期有两个主要的意义：</p><ol>\n<li>长时间的地下蛰伏，使得蝉可以尽可能避开冷夏，增加成活率</li>\n<li>两个周期都是<strong>质数</strong>，使得不同种群的蝉可以错峰生存（也包括和天敌错开），不相互抢占资源</li>\n</ol><p>这里的第二点，也是“蝉原则”的主要出发点。</p><blockquote>\n<p>这种以质数作为循环周期来增加“自然随机性”的策略就称之为“蝉原则”。\n（<a href=\"https://www.zhangxinxu.com/wordpress/2017/02/%E8%9D%89%E5%8E%9F%E5%88%99-background-border-radius/\">source</a>）</p>\n</blockquote></section>\n<section><h2>伪随机性</h2><p>首先需要考虑一个问题，为什么这种以质数作为循环周期的操作可以提供伪随机性，或者说是直觉上的随机性。</p><p>简单来说，如果一个系统内被引入了大量的影响因子，使得人不能很容易的发现内在的规律，就会产生一种“随机”的错觉。假设现在有两个周期，分别是 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">m</span></span></span></span> 周期和 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span> 周期。当这两个周期合并在一起的时候，新的结果的周期长度是 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>l</mi><mi>c</mi><mi>m</mi><mo stretchy=\"false\">(</mo><mi>m</mi><mo separator=\"true\">,</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">lcm(m, n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">c</span><span class=\"mord mathdefault\">m</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">m</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span></span></span></span>。而由于 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>l</mi><mi>c</mi><mi>m</mi><mo stretchy=\"false\">(</mo><mi>m</mi><mo separator=\"true\">,</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>≤</mo><mi>m</mi><mo>×</mo><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">lcm(m, n) \\leq m \\times n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">c</span><span class=\"mord mathdefault\">m</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">m</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span>，因此不难知道，当各个周期的长度互质的时候，最终合成的周期长度会是最长的。</p><p>以上面北美周期蝉为例，十三年蝉和十七年蝉两者形成的合成周期，长度是 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>13</mn><mo>×</mo><mn>17</mn><mo>=</mo><mn>221</mn></mrow><annotation encoding=\"application/x-tex\">13\\times17=221</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">7</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mord\">2</span><span class=\"mord\">1</span></span></span></span>。也就是说，每隔 221 年才会出现一次同时的爆发，蝉生长和爆发也以 221 年为单位进行重复。221 年已经是非常大的一个时间周期了，如果以一个普通人的一生作为观察尺度的话，不会发现重复，因而很容易产生随机的错觉。</p><p>这还只是两个周期重叠的效果。试想，如果有六个素数周期叠加在一起，最终形成的周期长度将会是非常大的。以最小的六个素数为例，<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>l</mi><mi>c</mi><mi>m</mi><mo stretchy=\"false\">(</mo><mn>2</mn><mo separator=\"true\">,</mo><mn>3</mn><mo separator=\"true\">,</mo><mn>5</mn><mo separator=\"true\">,</mo><mn>7</mn><mo separator=\"true\">,</mo><mn>11</mn><mo separator=\"true\">,</mo><mn>13</mn><mo stretchy=\"false\">)</mo><mo>=</mo><mn>2</mn><mo>×</mo><mn>3</mn><mo>×</mo><mn>5</mn><mo>×</mo><mn>7</mn><mo>×</mo><mn>11</mn><mo>×</mo><mn>13</mn><mo>=</mo><mn>30030</mn></mrow><annotation encoding=\"application/x-tex\">lcm(2, 3, 5, 7, 11, 13)=2\\times3\\times5\\times7\\times11\\times13=30030</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">c</span><span class=\"mord mathdefault\">m</span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">3</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">5</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">7</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mord\">3</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">5</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">7</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">3</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">3</span><span class=\"mord\">0</span></span></span></span>。</p><p>当然，需要声明的是，这只是一种<strong>伪</strong>随机性，并不是真正意义上的随机。只要观察的尺度被拉大，规律性还是很容易被发觉的。</p></section>\n<section><h2>CSS 中的应用</h2><p>基于以上的分析，用“<ruby>蝉原则<rp>(</rp><rt>Cicada Principle</rt><rp>)</rp></ruby>”在 CSS 中制造伪随机是一个很不错的方案，主要有以下两个方面的考量：</p><ol>\n<li>CSS 本身并不提供随机函数，想要形成随机的感觉，只能求助于伪随机的方案；</li>\n<li>对于 CSS 来说，最终的效果总是要在终端显示出来的。而只要是在物理终端上有所展示，尺度问题就一定是被限制的（屏幕没法无限大），因而只要参与的互质数够多，就很难被发现规律。</li>\n</ol><section><h3>nth-child 方案</h3><p>使用 CSS 的 <code class=\"language-text\">nth-child</code> 选择器，可以针对一组子元素分别定义不同的样式，从而达到设置周期的效果。举例来说：</p><div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.child</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.child:nth-child(2n)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.child:nth-child(3n)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span></code></pre></div><p>设置了以 2 和 3 为周期的两种不同周期。同时 <code class=\"language-text\">.child {}</code> 保证了对于这两个周期没有覆盖到的元素，也会有一个 fallback 的样式。</p><p><a href=\"https://2016.uxlondon.com/speakers\">伦敦 UX 大会</a>的嘉宾头像展示了随机的圆角，就是应用了上面提到的技巧来处理的。一些细节的介绍可以看作者的<a href=\"http://www.lottejackson.com/learning/nth-child-cicada-principle\">博客说明</a>。</p></section><section><h3>linear-gradient 方案</h3><p><a href=\"https://leaverou.github.io/css3patterns/#cicada-stripes\">Cicada stripes</a> 就是使用了这样一个方案来实现背景纹理的伪随机化。</p><p>涉及到的 CSS 代码为：</p><div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.stripes</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* 这个是图案的背景主题色，条纹效果是在这个背景色的基础上，增加一些透明度不一的蒙版 */</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #026873<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span>\n  <span class=\"token comment\">/* 渐变轴垂直 90 度，一半是 0.07 透明度，一半是完全透明 */</span>\n  <span class=\"token function\">linear-gradient</span><span class=\"token punctuation\">(</span>90deg<span class=\"token punctuation\">,</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>255<span class=\"token punctuation\">,</span>255<span class=\"token punctuation\">,</span>255<span class=\"token punctuation\">,</span>.07<span class=\"token punctuation\">)</span> 50%<span class=\"token punctuation\">,</span> transparent 50%<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">linear-gradient</span><span class=\"token punctuation\">(</span>90deg<span class=\"token punctuation\">,</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>255<span class=\"token punctuation\">,</span>255<span class=\"token punctuation\">,</span>255<span class=\"token punctuation\">,</span>.13<span class=\"token punctuation\">)</span> 50%<span class=\"token punctuation\">,</span> transparent 50%<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">linear-gradient</span><span class=\"token punctuation\">(</span>90deg<span class=\"token punctuation\">,</span> transparent 50%<span class=\"token punctuation\">,</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>255<span class=\"token punctuation\">,</span>255<span class=\"token punctuation\">,</span>255<span class=\"token punctuation\">,</span>.17<span class=\"token punctuation\">)</span> 50%<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">linear-gradient</span><span class=\"token punctuation\">(</span>90deg<span class=\"token punctuation\">,</span> transparent 50%<span class=\"token punctuation\">,</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>255<span class=\"token punctuation\">,</span>255<span class=\"token punctuation\">,</span>255<span class=\"token punctuation\">,</span>.19<span class=\"token punctuation\">)</span> 50%<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/* 上面这四种渐变，周期分别是 13px，29px，37px 和 53px */</span>\n  <span class=\"token property\">background-size</span><span class=\"token punctuation\">:</span> 13px<span class=\"token punctuation\">,</span> 29px<span class=\"token punctuation\">,</span> 37px<span class=\"token punctuation\">,</span> 53px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div></section></section>\n<section><h2>一些<ruby>补充<rp>(</rp><rt>勘误</rt><rp>)</rp></ruby></h2><p>在上面 nth-child 方案的章节中，引用了伦敦 UX 大会的例子。其中，作者在解释的博客说明中，提到了一般的 <code class=\"language-text\">:nth-child(2n)</code>，<code class=\"language-text\">:nth-child(3n)</code> 效果并不非常好，因而做了一些改进：</p><blockquote>\n<p>However, I found that just using prime numbers didn’t quite target enough items to make it look really random, so I added another layer of nth-child using prime numbers like this</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.nth-child(2n+1)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.nth-child(3n+2)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span></code></pre></div>\n</blockquote><p>在很多其他的文章中，也都提到了这一条。然而，从数学上看，这一点似乎很难成立。</p><p>首先，<code class=\"language-text\">.nth-child(2n+1)</code> 和 <code class=\"language-text\">.nth-child(2n)</code> 的选择器，本质上都是在创建一个以 2 为长度的周期。区别仅仅是在于，前者做了一个平移，平移的长度是一个元素。而针对有平移的方案，并不会导致最终形成的循环周期发生变化。举例来说，如果用 <code class=\"language-text\">.nth-child(2n+1)</code> 和 <code class=\"language-text\">.nth-child(3n+2)</code> 有重合，那么就会有 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>2</mn><mi>n</mi><mo>+</mo><mn>1</mn><mo>=</mo><mn>3</mn><mi>m</mi><mo>+</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2n+1=3m+2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">2</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">3</span><span class=\"mord mathdefault\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span>，不难得出 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>2</mn><mo stretchy=\"false\">(</mo><mi>n</mi><mo>+</mo><mn>3</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mn>1</mn><mo>=</mo><mn>3</mn><mo stretchy=\"false\">(</mo><mi>m</mi><mo>+</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2(n+3)+1=3(m+2)+2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">3</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">3</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> 是一个新的重合，新周期的长度依然是 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>l</mi><mi>c</mi><mi>m</mi><mo stretchy=\"false\">(</mo><mn>2</mn><mo separator=\"true\">,</mo><mn>3</mn><mo stretchy=\"false\">)</mo><mo>=</mo><mn>2</mn><mo>×</mo><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">lcm(2, 3) = 2\\times3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">c</span><span class=\"mord mathdefault\">m</span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">3</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">3</span></span></span></span>。因而，不管用哪一种方案，最终形成的一个周期长度，都是 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>l</mi><mi>c</mi><mi>m</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>m</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>n</mi><mo>×</mo><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">lcm(n, m) = n \\times m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">c</span><span class=\"mord mathdefault\">m</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">m</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">m</span></span></span></span>。</p><p>其次，<code class=\"language-text\">.nth-child(2n+1)</code> 的方案可以覆盖更多的元素，似乎也不成立。对于没有平移的方案 <code class=\"language-text\">:nth-child(2n)</code> 来说，在一个最终形成的周期内，不能被子周期覆盖到的部分，就是那些更大的素数。换句话说，不能覆盖的集合是 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>P</mi><mo>=</mo><mo stretchy=\"false\">{</mo><mi>p</mi><mi mathvariant=\"normal\">∣</mi><mi>p</mi><mo>∈</mo><mi>p</mi><mi>r</mi><mi>i</mi><mi>m</mi><mi>e</mi><mo separator=\"true\">,</mo><mi>p</mi><mo>≤</mo><mi>l</mi><mi>c</mi><mi>m</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>m</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">}</mo><mo>∪</mo><mo stretchy=\"false\">{</mo><mn>1</mn><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">P = \\{p | p \\in prime, p \\leq lcm(n, m)\\}\\cup\\{1\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathdefault\">p</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\">p</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">p</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathdefault\">i</span><span class=\"mord mathdefault\">m</span><span class=\"mord mathdefault\">e</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">p</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">c</span><span class=\"mord mathdefault\">m</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">m</span><span class=\"mclose\">)</span><span class=\"mclose\">}</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∪</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">1</span><span class=\"mclose\">}</span></span></span></span>。如果由 2、3、5 来组成周期，那么在 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>2</mn><mo>×</mo><mn>3</mn><mo>×</mo><mn>5</mn><mo>=</mo><mn>30</mn></mrow><annotation encoding=\"application/x-tex\">2\\times3\\times5=30</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">5</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">3</span><span class=\"mord\">0</span></span></span></span> 个数内，1、7、11、13、17、19、23、29 是不能被覆盖到的数。以同样的周期组合，来考虑带平移的方案，不能被覆盖到的部分，是 4、6、10、12、16、22、24、30。不难发现，不能被覆盖到的量其实是一样的。</p><p>当然，两种方案不能覆盖到的具体值是不一样的。所以是否存在感觉上的不同，光从数字上很难区别。下面给了一个实际可操作的例子，展示了 30 个元素的“伪随机”效果，总共用到了 2、3、5 这三个周期。鼠标不 hover 时候，展示的是没有平移的效果，hover 上去后展示带有平移的效果。</p><style>\n  .demo-small {\n    display: flex;\n    margin-bottom: 1.75rem;\n  }\n  .demo-small .box {\n    width: 5px;\n    height: 60px;\n    background-color:rgb(0, 0, 255);\n  }\n  .demo-small .box:nth-child(2n) {\n    background-color: rgba(0, 0, 255, 0.9);\n  }\n  .demo-small .box:nth-child(3n) {\n    background-color: rgba(0, 0, 255, 0.7);\n  }\n  .demo-small .box:nth-child(5n) {\n    background-color: rgba(0, 0, 255, 0.5);\n  }\n\n  .demo-small:hover .box {\n    background-color: rgb(0, 0, 255);\n  }\n  .demo-small:hover .box:nth-child(2n+1) {\n    background-color: rgba(0, 0, 255, 0.9);\n  }\n  .demo-small:hover .box:nth-child(3n+2) {\n    background-color: rgba(0, 0, 255, 0.7);\n  }\n  .demo-small:hover .box:nth-child(5n+3) {\n    background-color: rgba(0, 0, 255, 0.5);\n  }\n</style><div class=demo-small>\n  <div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div>\n  <div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div>\n  <div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div>\n</div><p>整体上看，似乎也没有很大的差异。</p><style>\n  .demo-large {\n    display: flex;\n    margin-bottom: 1.75rem;\n  }\n  .demo-large .box {\n    width: 5px;\n    height: 60px;\n    background-color:rgb(255, 0, 0);\n  }\n  .demo-large .box:nth-child(2n) {\n    background-color: rgba(255, 0, 0, 0.9);\n  }\n  .demo-large .box:nth-child(3n) {\n    background-color: rgba(255, 0, 0, 0.8);\n  }\n  .demo-large .box:nth-child(5n) {\n    background-color: rgba(255, 0, 0, 0.7);\n  }\n  .demo-large .box:nth-child(7n) {\n    background-color: rgba(255, 0, 0, 0.6);\n  }\n  .demo-large .box:nth-child(11n) {\n    background-color: rgba(255, 0, 0, 0.5);\n  }\n  .demo-large .box:nth-child(13n) {\n    background-color: rgba(255, 0, 0, 0.4);\n  }\n\n  .demo-large:hover .box {\n    background-color: rgb(255, 0, 0);\n  }\n  .demo-large:hover .box:nth-child(2n+1) {\n    background-color: rgba(255, 0, 0, 0.9);\n  }\n  .demo-large:hover .box:nth-child(3n+2) {\n    background-color: rgba(255, 0, 0, 0.8);\n  }\n  .demo-large:hover .box:nth-child(5n+3) {\n    background-color: rgba(255, 0, 0, 0.7);\n  }\n  .demo-large:hover .box:nth-child(7n+5) {\n    background-color: rgba(255, 0, 0, 0.6);\n  }\n  .demo-large:hover .box:nth-child(11n+7) {\n    background-color: rgba(255, 0, 0, 0.5);\n  }\n  .demo-large:hover .box:nth-child(13n+11) {\n    background-color: rgba(255, 0, 0, 0.4);\n  }\n</style><div class=demo-large>\n  <div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div>\n  <div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div>\n  <div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div>\n  <div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div>\n  <div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div>\n  <div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div>\n  <div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div>\n  <div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div>\n  <div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div>\n  <div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div><div class=box></div>\n</div><p>上面这个例子，总共用到了 2、3、5、7、11、13 这六个周期，在总长度为 30030 的周期中，选取了前 100 个元素形成的最终展示效果。感觉上，也没有明显的优化。但是从实际的情况来看，数据上有细微的不同。</p><p>有平移效果的情况，在 100 以内不能被覆盖的总数是 19 个；没有平移的情况，100 以内剩余的素数个数也是 19 个，但还需要加上 1，一共是 20 个元素。同时，在有平移效果的情况下，各个素数被使用的次数统计如下：</p><div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"2\"</span><span class=\"token operator\">:</span> <span class=\"token number\">21</span><span class=\"token punctuation\">,</span> \n  <span class=\"token property\">\"3\"</span><span class=\"token operator\">:</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> \n  <span class=\"token property\">\"5\"</span><span class=\"token operator\">:</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> \n  <span class=\"token property\">\"7\"</span><span class=\"token operator\">:</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> \n  <span class=\"token property\">\"11\"</span><span class=\"token operator\">:</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> \n  <span class=\"token property\">\"13\"</span><span class=\"token operator\">:</span> <span class=\"token number\">7</span>\n<span class=\"token punctuation\">}</span></code></pre></div><p>而没有平移效果的情况下，各个素数被使用的次数统计如下：</p><div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span> \n  <span class=\"token property\">\"2\"</span><span class=\"token operator\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> \n  <span class=\"token property\">\"3\"</span><span class=\"token operator\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> \n  <span class=\"token property\">\"5\"</span><span class=\"token operator\">:</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> \n  <span class=\"token property\">\"7\"</span><span class=\"token operator\">:</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> \n  <span class=\"token property\">\"11\"</span><span class=\"token operator\">:</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> \n  <span class=\"token property\">\"13\"</span><span class=\"token operator\">:</span> <span class=\"token number\">7</span>\n<span class=\"token punctuation\">}</span></code></pre></div><p>没有平移效果的情况，分布更均匀一些，但差别也不大。另，如果看整个周期 30030 个元素，那么分布结果是相同的：</p><div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"2\"</span><span class=\"token operator\">:</span> <span class=\"token number\">5760</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"3\"</span><span class=\"token operator\">:</span> <span class=\"token number\">5760</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"5\"</span><span class=\"token operator\">:</span> <span class=\"token number\">4320</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"7\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3600</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"11\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2520</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"13\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2310</span>\n<span class=\"token punctuation\">}</span></code></pre></div><p>因为平移的存在，一段区间内的实际未覆盖率和无平移的情况存在细微的偏差，但不影响总体效果。</p><p>综上所述，似乎没有看到加平移的特别效果，可以根据实际感受按需选择。</p></section>","frontmatter":{"title":"蝉原则（Cicada Principle）","date":"2019-04-21","modified":"2019-04-21","description":"本文主要整理了“蝉原则”在 CSS 中的应用及相关原理，包括其他网上文章针对这一内容常见说法的补充/勘误。"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/cicada-principle/","previous":{"fields":{"slug":"/alias-for-web-project/","type":"blog"},"frontmatter":{"title":"Web 应用的 Alias 配置","category":"Tools","tags":"Tools, JavaScript"}},"next":null}}}