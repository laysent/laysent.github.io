{"componentChunkName":"component---src-templates-til-js","path":"/til/2019-09-17_git-pull-rebase","result":{"data":{"markdownRemark":{"id":"e67d176b-9712-599d-a833-f4bdbec4db4c","html":"<p>默认情况下，使用 <code class=\"language-text\">git pull</code> 拉取最新代码的时候，Git 会触发 <code class=\"language-text\">git merge</code> 来进行远端代码和本地代码的合并。如果两份代码之间没有冲突，那么 Merge 行为可以进行 Fast Forward，最终的结果是比较“干净”的 Commit；然而，如果 Fast Forward 无法进行，那么最终的显示效果，是 git 的历史中会多出一条 Merge 的 commit。</p>\n<p>在绝大多数情况下，这类 Merge commit 都是多余的。这种时候，一般会建议使用 <code class=\"language-text\">git pull --rebase</code> 命令来拉取代码。这样，拿到最新代码后，Git 会使用 rebase 而不是 merge 来进行远端代码和本地代码的合并（关于 Merge 和 Rebase 的一些讨论，可以参考 Atlassian 的<a href=\"https://www.atlassian.com/git/tutorials/merging-vs-rebasing\">文章</a>）。</p>\n<p>当然，每次都这么写会比较繁琐。一个简单的方法，是通过 Shell 进行下面的 Git 配置：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> config --global pull.rebase <span class=\"token boolean\">true</span></code></pre></div>\n<p>或者，等价的，可以在 <code class=\"language-text\">~/.gitconfig</code> 文件中，增加如下的配置信息：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[pull]\n  rebase = true</code></pre></div>\n<p>（针对 Git 版本小于 1.7.9 的情况，配置可以参考<a href=\"https://coderwall.com/p/tnoiug/rebase-by-default-when-doing-git-pull\">这里</a>）</p>\n<p>如此一来，<code class=\"language-text\">git pull</code> 的默认行为就会从 merge 变成 rebase。</p>\n<p>在这种情况下，如果希望使用 merge 的行为，可以写 <code class=\"language-text\">git pull --no-rebase</code>。</p>","frontmatter":{"title":"Git Pull Rebase","category":"Git","date":"2019-09-17"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"time":"2019-09-17","title":"Git Pull Rebase","previous":{"time":"2019-09-16","title":"Download Chunk via ServiceWorker"},"next":{"time":"2019-09-18","title":"compareDocumentPosition"}}}}