{"componentChunkName":"component---src-templates-til-js","path":"/til/2019-08-07_screen-recording-in-macos","result":{"data":{"markdownRemark":{"id":"1dfceea8-4efc-50ce-a5ec-1f0ecaf72b01","html":"<p>OSX 自带的 QuickTime Player 支持屏幕的录制功能。具体的操作步骤如下：</p>\n<ol>\n<li>打开 QuickTime Player</li>\n<li>点击菜单中的 File => New Screen Recording</li>\n<li>拖拽选择需要录制的区域，并点击开始录制，点击右上角可以结束录制</li>\n<li>录屏结束后，可以选择菜单中的 File => Export => As Movie 来保存视频</li>\n</ol>\n<section><h2>转化为 Gif 格式</h2><p>假设上述步骤保存了一个名为 <code class=\"language-text\">in.mov</code> 的视频，通过以下步骤可以将视频转化为 Gif 格式：</p><ol>\n<li>右键点击 <code class=\"language-text\">in.mov</code> 文件，选择 <code class=\"language-text\">Get Info</code>，在 <code class=\"language-text\">More Info</code> 中找到视频的大小信息，这里假设大小为 60x40</li>\n<li>\n<p>运行如下命令，将 <code class=\"language-text\">in.mov</code> 转化为 <code class=\"language-text\">out.gif</code> 文件</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ffmpeg -i in.mov -s 60x40 -pix_fmt rgb24 -r <span class=\"token number\">10</span> -f gif out.gif</code></pre></div>\n<p>这里参数的具体含义如下：</p>\n<ul>\n<li><code class=\"language-text\">-s 60x40</code> 指定了最大宽度和最大高度。这里可以不指定，输出将按照原始大小来。如果指定较小的长宽值，输出将变小。</li>\n<li><code class=\"language-text\">-r 10</code> 将帧数从 25 调整为 10。</li>\n</ul>\n</li>\n</ol><p>如果 <code class=\"language-text\">ffmpeg</code> 命令找不到，可以使用 <code class=\"language-text\">Homebrew</code> 进行安装：</p><div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">brew <span class=\"token function\">install</span> ffmpeg</code></pre></div></section>\n<section><h2>优化 Gif 文件</h2><p>可以使用 <code class=\"language-text\">gifsicle</code> 命令对产生的 gif 文件进行压缩：</p><div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">gifsicle out.gif --optimize<span class=\"token operator\">=</span><span class=\"token number\">3</span> -o optimized.gif</code></pre></div><p>这里，<code class=\"language-text\">--optimize=3</code> 参数要求 <code class=\"language-text\">gifsicle</code> 使用最高等级优化图片。这会需要更多的时间和 CPU 来计算，但是压缩效果相对也是最好的。</p><p>如果找不到 <code class=\"language-text\">gifsicle</code> 命令，可以使用 <code class=\"language-text\">Homebrew</code> 进行安装：</p><div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">brew <span class=\"token function\">install</span> gifsicle</code></pre></div><p>经测试，一个 <code class=\"language-text\">463 KB</code> 的文件，压缩后的大小为 <code class=\"language-text\">417 KB</code>，压缩了 10%。</p><p>以上生成 Gif 和优化 Gif 的命令可以放到一起执行：</p><div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ffmpeg -i in.mov -s 60x40 -pix_fmt rgb24 - <span class=\"token operator\">|</span> gifsicle --optimize<span class=\"token operator\">=</span><span class=\"token number\">3</span> <span class=\"token operator\">></span> out.gif</code></pre></div></section>\n<section><h2>参考</h2><ul>\n<li><a href=\"https://gist.github.com/dergachev/4627207\">https://gist.github.com/dergachev/4627207</a></li>\n<li>该文作者针对 mov 到 gif 的转换写了一个 Ruby 脚本，可以显著提高转化后的质量，脚本见 <a href=\"https://github.com/dergachev/screengif\">https://github.com/dergachev/screengif</a></li>\n</ul></section>","frontmatter":{"title":"Screen Recording in MacOS","category":"Tool","date":"2019-08-07"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"time":"2019-08-07","title":"Screen Recording in MacOS","previous":{"time":"2019-08-06","title":"Raspberry Pi as WOL"},"next":{"time":"2019-08-08","title":"Big Number in JavaScript"}}}}