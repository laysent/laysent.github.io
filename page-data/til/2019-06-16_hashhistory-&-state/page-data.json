{"componentChunkName":"component---src-templates-til-js","path":"/til/2019-06-16_hashhistory-&-state","webpackCompilationHash":"d0c1c456129354e33ddb","result":{"data":{"markdownRemark":{"id":"79bee574-d4b0-57b1-b531-1ef59addb95d","html":"<p>react-router 底层使用了 history 库来处理路由。一般有两种选择，一种是使用 <code class=\"language-text\">BrowserHistory</code>（背后的实现依赖了 History API），一种是使用 <code class=\"language-text\">HashHistory</code>（背后的实现主要依赖 <code class=\"language-text\">window.location.hash</code>）。</p>\n<p>如果尝试在 HashHistory 上调用 <code class=\"language-text\">push</code> API 并传递 state 参数：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> history <span class=\"token operator\">=</span> <span class=\"token function\">HashHistory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nhistory<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> state<span class=\"token punctuation\">:</span> <span class=\"token string\">'value'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>会在 console 看到如下的报错，并且 state 并没有传递成功：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Hash history cannot push state; it is ignored</code></pre></div>\n<p>这个是 history 库的默认行为，具体的代码可以参考 <code class=\"language-text\">modules/createHashHistory.js</code> 中 <code class=\"language-text\">push</code> 的代码：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> state</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">warning</span><span class=\"token punctuation\">(</span>\n    state <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'Hash history cannot push state; it is ignored'</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> action <span class=\"token operator\">=</span> <span class=\"token string\">'PUSH'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> location <span class=\"token operator\">=</span> <span class=\"token function\">createLocation</span><span class=\"token punctuation\">(</span>\n    path<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span>\n    history<span class=\"token punctuation\">.</span>location\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// ...</span></code></pre></div>\n<p>上面的代码可以看到，如果传递了第二个参数 state，那么就会输出报错。同时，在 createLocation 函数调用的时候，第二个参数本来应该是 state，这里显式地写成了 <code class=\"language-text\">undefined</code>，明确拒绝了传递 state 的做法。</p>\n<p>然而，这并不意味着就完全不能传递 <code class=\"language-text\">state</code> 了。</p>\n<p>事实上，<code class=\"language-text\">push</code> 函数有两种 API 可供选择，一种是 path 是字符串，然后 state 作为第二个参数传递；另一种则第一个参数就是一个对象，其中一个属性就是 state。</p>\n<p>如果使用下面的方法调用，state 就可以在 react-router 中被传递了：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">hashHistory<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> path<span class=\"token punctuation\">:</span> <span class=\"token string\">'path'</span><span class=\"token punctuation\">,</span> state<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> state<span class=\"token punctuation\">:</span> <span class=\"token string\">'value'</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>但是，需要指出的是。这个只是 <code class=\"language-text\">state</code> 被<strong>传递</strong>了，并不代表 <code class=\"language-text\">state</code> 真的被存储了下来。事实上，HashHistory 并没有依赖浏览器的 History API 功能。因此，这里的 <code class=\"language-text\">state</code> 传递之后，会出现在 <code class=\"language-text\">history.location.state</code> 中，但是在浏览器前进/后退的操作中，数据会被丢弃，无法找到。</p>\n<p>一个简单的例子是：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> h <span class=\"token operator\">=</span> <span class=\"token function\">createHashHistory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nh<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">location</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nh<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> pathname<span class=\"token punctuation\">:</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> state<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// output: 1</span>\nh<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> pathname<span class=\"token punctuation\">:</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> state<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// output: 2</span>\nh<span class=\"token punctuation\">.</span><span class=\"token function\">goBack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// output: undefined</span>\nh<span class=\"token punctuation\">.</span><span class=\"token function\">goForward</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// output: undefined</span></code></pre></div>\n<p>如果将 HashHistory 改成 BrowserHistory，则可以正确输出：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> h <span class=\"token operator\">=</span> <span class=\"token function\">createBrowserHistory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nh<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">location</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nh<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> pathname<span class=\"token punctuation\">:</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> state<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// output: 1</span>\nh<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> pathname<span class=\"token punctuation\">:</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> state<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// output: 2</span>\nh<span class=\"token punctuation\">.</span><span class=\"token function\">goBack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// output: 1</span>\nh<span class=\"token punctuation\">.</span><span class=\"token function\">goForward</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// output: 2</span></code></pre></div>","frontmatter":{"title":"HashHistory & State","category":"JavaScript","date":"2019-06-16"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"time":"2019-06-16","title":"HashHistory & State","previous":{"time":"2019-06-13","title":"Capture Screen Shot with Mac OS"},"next":{"time":"2019-06-17","title":"Unzip using JavaScript"}}}}