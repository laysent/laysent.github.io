{"componentChunkName":"component---src-templates-til-js","path":"/til/2019-08-05_permission-denied-for-rsync","webpackCompilationHash":"d0c1c456129354e33ddb","result":{"data":{"markdownRemark":{"id":"4da4b0bc-07b5-5fd9-a3a0-aa22a748c6c7","html":"<p>相比于 <code class=\"language-text\">scp</code>，<code class=\"language-text\">rsync</code> 命令可以在 SSH 拷贝的时候提供更多的灵活性，比如只拷贝新修改的或未存在的文件。</p>\n<p>一个简单的拷贝命令如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">rsync</span> -auv /local/folder host:/remote/folder</code></pre></div>\n<p>这里，<code class=\"language-text\">-a</code> 表示拷贝所有的文件（包括子文件夹中的），<code class=\"language-text\">-u</code> 表示只拷贝修改时间更新的部分，<code class=\"language-text\">-v</code> 则会将结果输出到 stdin 中方便查看。类似的，还可以使用 <code class=\"language-text\">--ignore-existing</code> 来要求 <code class=\"language-text\">rsync</code> 只拷贝新的文件，忽略已经存在的部分。</p>\n<p>然而在实际使用的过程中，<code class=\"language-text\">rsync</code> 有如下报错：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Permission denied, please try again.\nrsync: connection unexpectedly closed (0 bytes received so far) [sender]\nrsync error: error in rsync protocol data stream (code 12) at io.c(235) [sender=3.1.2]</code></pre></div>\n<p>如果换同样的 SSH 配置，使用 <code class=\"language-text\">scp</code> 就不会有类似的报错，可见本身并不是 SSH 登陆账户权限的问题。这里的 Permission denied 报错非常的具有误导性。实际上，更可能的情况是 <code class=\"language-text\">rsync</code> 无法在远程主机上找到，需要通过 <code class=\"language-text\">--rsync-path</code> 参数手动指定。</p>\n<p>首先，可以先 SSH 到远程主机上，确认 <code class=\"language-text\">rsync</code> 本身是存在的：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">rsync</span> --help</code></pre></div>\n<p>接着，可以通过 <code class=\"language-text\">type</code> 命令确认 <code class=\"language-text\">rsync</code> 的实际位置：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">type</span> -a <span class=\"token function\">rsync</span></code></pre></div>\n<p>这里，假设输出的结果是 <code class=\"language-text\">/bin/rsync</code>，那么，可以将原先的 <code class=\"language-text\">rsync</code> 命令改写为：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">rsync</span> -auv /local/folder host:/remote/folder --rsync-path<span class=\"token operator\">=</span>/bin/rsync</code></pre></div>\n<p>再次运行就不会报错了。</p>\n<p><a href=\"https://superuser.com/questions/1017697/how-can-rsync-fail-due-to-missing-permissions-if-remote-login-occurs-with-root\">参考文档</a></p>","frontmatter":{"title":"Permission Denied for Rsync","category":"Bash","date":"2019-08-05"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"time":"2019-08-05","title":"Permission Denied for Rsync","previous":{"time":"2019-08-04","title":"How Makefile works"},"next":{"time":"2019-08-06","title":"Raspberry Pi as WOL"}}}}