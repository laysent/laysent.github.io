{"componentChunkName":"component---src-templates-til-js","path":"/til/2019-08-26_get-yesterday-date-in-bash","webpackCompilationHash":"d0c1c456129354e33ddb","result":{"data":{"markdownRemark":{"id":"d6be7486-bf8a-54af-bcea-03075a7085ee","html":"<p>在大多数时候，Mac 系统和 Linux 系统在终端的使用体验上是比较一致的，但偶尔也有一些命令，会出现两端不一样的情况。比如，当需要通过 <code class=\"language-text\">date</code> 命令获取昨天的日期。</p>\n<p>在 Mac 中，可以通过如下的命令来完成：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">date</span> -v <span class=\"token string\">'-1d'</span> <span class=\"token string\">'+%Y-%m-%d'</span></code></pre></div>\n<p>输出的结果是 <code class=\"language-text\">2019-08-25</code>。（这里，<code class=\"language-text\">&#39;+%Y-%m-%d&#39;</code> 指定 <code class=\"language-text\">date</code> 以“年-月-日”的格式输出日期；另外，如果想要得到明天的日期，可以通过 <code class=\"language-text\">+1 day</code> 或 <code class=\"language-text\">+1d</code> 来得到）</p>\n<p>然而，在 Linux 系统下，同样的命令无法使用。需要修改成：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">date</span> -d <span class=\"token string\">'-1 day'</span> <span class=\"token string\">'+%Y-%m-%d'</span></code></pre></div>\n<p>才可以得到同样的结果。这里需要注意一点，如果 Docker 是基于 Alpine 的，默认 <code class=\"language-text\">date</code> 不支持 <code class=\"language-text\">-d</code> 这个选项，需要额外安装 <code class=\"language-text\">coreutils</code> 之后，才可以使用。即，在 Dockerfile 中增加：</p>\n<div class=\"gatsby-highlight\" data-language=\"dockerfile\"><pre class=\"language-dockerfile\"><code class=\"language-dockerfile\"><span class=\"token keyword\">RUN</span> apk add <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>update coreutils &amp;&amp; rm <span class=\"token punctuation\">-</span>rf /var/cache/apk/*</code></pre></div>\n<p>之后，上面的命令才能正确运行。</p>\n<p>如果希望一个命令可以在两个系统中运行，可以用如下的方法进行整合：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token variable\">$OSTYPE</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"darwin\"</span>* <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> \\\n  <span class=\"token function\">date</span> -v <span class=\"token string\">'-1d'</span> <span class=\"token string\">'+%Y-%m-%d'</span> <span class=\"token operator\">||</span> \\\n  <span class=\"token function\">date</span> -d <span class=\"token string\">'-1 day'</span> <span class=\"token string\">'+%Y-%m-%d'</span></code></pre></div>\n<p>注意，这里需要使用 <code class=\"language-text\">[[</code> 进行判断，<code class=\"language-text\">[</code> 的比较是无法使用 <code class=\"language-text\">*</code> 元字符匹配的。当然，这里没有考虑 Windows 的情况，毕竟 Windows 的情况太特殊了，大部分的命令都不兼容。</p>","frontmatter":{"title":"Get Yesterday Date in Bash","category":"Bash","date":"2019-08-26"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"time":"2019-08-26","title":"Get Yesterday Date in Bash","previous":{"time":"2019-08-25","title":"Cron in Docker"},"next":{"time":"2019-08-27","title":"Get Element by Content"}}}}