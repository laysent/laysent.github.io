{"componentChunkName":"component---src-templates-til-js","path":"/til/2019-05-20_classnames-&-css-module","webpackCompilationHash":"d0c1c456129354e33ddb","result":{"data":{"markdownRemark":{"id":"3656d85d-6ae6-5937-a3f4-54f2704bdfef","html":"<p><a href=\"https://github.com/JedWatson/classnames\">classnames</a> 库提供了一个 <code class=\"language-text\">bind</code> API，用于处理 CSS Module 的情况。</p>\n<p>在 Webpack 中用 CSS Module 的方案编译 CSS 文件，后续在 JavaScript 中 <code class=\"language-text\">import style from &#39;xxx.css&#39;;</code> 后，<code class=\"language-text\">style</code> 就是一个对象。这个对象的大体结构如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">style <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  foo<span class=\"token punctuation\">:</span> <span class=\"token string\">'foo-abcde'</span><span class=\"token punctuation\">,</span>\n  bar<span class=\"token punctuation\">:</span> <span class=\"token string\">'bar-12345'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>其中，对象的 <code class=\"language-text\">key</code> 是原始的 class name，而 <code class=\"language-text\">value</code> 则是施加 CSS Module 之后得到的唯一名称。</p>\n<p>如果直接使用 <code class=\"language-text\">classnames</code> 的标准 API，那么写起来就需要大量使用 computed property name 的语法，比如：</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">classnames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>style<span class=\"token punctuation\">.</span>foo<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>style<span class=\"token punctuation\">.</span>bar<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<p>而使用 <code class=\"language-text\">bind</code> API，可以事先告知 <code class=\"language-text\">classnames</code> class name 的对应关系（通过指定 <code class=\"language-text\">this</code>），后续只需要使用字符串，<code class=\"language-text\">classnames</code> 就可以自动使用合适的结果：</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> classNames <span class=\"token keyword\">from</span> <span class=\"token string\">'classnames/bind'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> styles <span class=\"token keyword\">from</span> <span class=\"token string\">'./style.css'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> cx <span class=\"token operator\">=</span> <span class=\"token function\">classNames</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>styles<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Component</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token comment\">// result in: className=\"foo-abcde\"</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">cx</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> foo<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> bar<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","frontmatter":{"title":"classnames & css module","category":"JavaScript","date":"2019-05-20"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"time":"2019-05-20","title":"classnames & css module","previous":{"time":"2019-05-19","title":"Multiple Git Configuration"},"next":{"time":"2019-05-21","title":"Extract all function properties from given type"}}}}