{"componentChunkName":"component---src-templates-til-js","path":"/til/2019-07-19_cpu-usage-via-nodejs","result":{"data":{"markdownRemark":{"id":"0bf27b9f-dd15-55b1-b4a3-6b8583529343","html":"<p>在 Node.js 中，可以通过 <code class=\"language-text\">os.cpus()</code> 这个函数，来了解当前状态下，计算机 CPU 的一些状态。以 MacBookPro 2019 款为例，以下是一份输出的结果：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    model<span class=\"token punctuation\">:</span> <span class=\"token string\">'Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz'</span><span class=\"token punctuation\">,</span>\n    speed<span class=\"token punctuation\">:</span> <span class=\"token number\">2200</span><span class=\"token punctuation\">,</span>\n    times<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      user<span class=\"token punctuation\">:</span> <span class=\"token number\">239572260</span><span class=\"token punctuation\">,</span>\n      nice<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n      sys<span class=\"token punctuation\">:</span> <span class=\"token number\">133555650</span><span class=\"token punctuation\">,</span>\n      idle<span class=\"token punctuation\">:</span> <span class=\"token number\">644681690</span><span class=\"token punctuation\">,</span>\n      irq<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// 省略类似的其他十一个...</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<p>在这个返回的数组中，每一个元素代表一个 CPU 的线程。这台 MacBookPro 是六核（core）十二线程（processor），所以返回的数组长度是十二。具体来看每一个元素：</p>\n<ul>\n<li><code class=\"language-text\">model</code>，表示了当前 CPU 的型号</li>\n<li><code class=\"language-text\">speed</code>，表示 CPU 的运算速度，单位是 MHz</li>\n<li>\n<p><code class=\"language-text\">times</code> 表示 CPU 的使用情况，分别记录了一些时间（单位是毫秒）：</p>\n<ul>\n<li><code class=\"language-text\">user</code> 表示进程在用户模式（user mode）下使用的时间；</li>\n<li><code class=\"language-text\">nice</code> 表示被调整优先级（nice）的进程在用户模式下使用的时间。这里，nice 用于表示执行的优先级，从 -20（最高优先级）到 19（最低优先级）。默认的程序，优先级是 0；（注：这是一个 Unix 特有的功能，对于 Windows 用户来说，这个值永远是 0）</li>\n<li><code class=\"language-text\">sys</code> 表示进程在内核模式下使用的时间；</li>\n<li><code class=\"language-text\">idle</code> 表示空闲的时间；</li>\n<li><code class=\"language-text\">irq</code> 表示硬中断请求花费的时间。硬中断也叫外部中断，由外部硬件产生，如鼠标、键盘等。</li>\n</ul>\n</li>\n</ul>\n<p>有了以上的数据，就可以在 Node / Electron 程序中查看 CPU 的使用，从而对当前程序的执行情况有一个客观的了解。</p>","frontmatter":{"title":"CPU Usage via Nodejs","category":"Node.js","date":"2019-07-19"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"time":"2019-07-19","title":"CPU Usage via Nodejs","previous":{"time":"2019-07-18","title":"navigator.platform"},"next":{"time":"2019-07-22","title":"Get Branch Name & Commit ID without Git"}}}}