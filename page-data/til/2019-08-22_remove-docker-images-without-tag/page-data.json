{"componentChunkName":"component---src-templates-til-js","path":"/til/2019-08-22_remove-docker-images-without-tag","result":{"data":{"markdownRemark":{"id":"79d162bf-9a29-5ead-9736-40e96c0ba54d","html":"<p>在 Docker 开发的过程中，可能会产生很多无用的临时 Docker Image。这些 Image 很可能没有 Tag，在 <code class=\"language-text\">docker image ls</code> 显示的时候，Tag 一列显示为 <code class=\"language-text\">&lt;none&gt;</code>。</p>\n<p>要批量清除这些 Image，可以使用如下的命令：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">docker <span class=\"token function\">rm</span> <span class=\"token variable\"><span class=\"token variable\">$(</span>docker images -f <span class=\"token string\">\"dangling=true\"</span> -q --no-trunc<span class=\"token variable\">)</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>如果需要强制删除，可以将 <code class=\"language-text\">rm</code> 改为 <code class=\"language-text\">rmi</code>。</p>\n<p>这里，<code class=\"language-text\">docker images -f &quot;dangling-true&quot;</code> 命令会列出所有没有 Tag 标记的 Image，加上 <code class=\"language-text\">-q</code> 标记后，将会只列出每个 Image 的 ID，<code class=\"language-text\">--no-trunc</code> 保证显示的是完整的 ID 而不仅仅只是 ID 的前几位。</p>\n<p>再配合 <code class=\"language-text\">docker rm</code> 就可以将这批 Image 全部一次性删除了。</p>","frontmatter":{"title":"Remove Docker Images without Tag","category":"Docker","date":"2019-08-22"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"time":"2019-08-22","title":"Remove Docker Images without Tag","previous":{"time":"2019-08-21","title":"Seeding Search in VSCode"},"next":{"time":"2019-08-25","title":"Cron in Docker"}}}}