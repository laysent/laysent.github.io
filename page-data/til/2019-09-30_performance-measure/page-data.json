{"componentChunkName":"component---src-templates-til-js","path":"/til/2019-09-30_performance-measure","result":{"data":{"markdownRemark":{"id":"d2c713ba-83c1-5c25-8d75-4bb1aece6f6b","html":"<p>浏览器提供了 <code class=\"language-text\">performance</code> 用于测量 JavaScript 的一些运行效率，并在浏览器的对应位置（如 Chrome 的 Performance Tab）生成火焰图，可以方便的查看程序调用栈的执行效率。简单的操作如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">getMarkName</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">mark: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">beginMark</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  performance<span class=\"token punctuation\">.</span><span class=\"token function\">mark</span><span class=\"token punctuation\">(</span><span class=\"token function\">getMarkName</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">endMark</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> markName <span class=\"token operator\">=</span> <span class=\"token function\">getMarkName</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    performance<span class=\"token punctuation\">.</span><span class=\"token function\">measure</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> markName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 如果 markName 无法被找到（也就是 beginMark 函数没有被调用）</span>\n    <span class=\"token comment\">// 那么程序在 performance.measure 的时候会报错</span>\n    <span class=\"token comment\">// 这里无需将报错抛出，直接吞掉就可以了</span>\n  <span class=\"token punctuation\">}</span>\n  performance<span class=\"token punctuation\">.</span><span class=\"token function\">clearMarks</span><span class=\"token punctuation\">(</span>markName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  performance<span class=\"token punctuation\">.</span><span class=\"token function\">clearMeasure</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">beginMark</span><span class=\"token punctuation\">(</span><span class=\"token string\">'label name'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 需要进行的操作</span>\n  <span class=\"token function\">endMark</span><span class=\"token punctuation\">(</span><span class=\"token string\">'label name'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>具体来说，通过 <code class=\"language-text\">performance.mark</code> 函数标记一个点，然后在需要测量的程序执行完成之后，通过 <code class=\"language-text\">performance.measure</code> 来计算当前和最初 mark 的点之间的运行时间。最终，这一段结果会在 Chrome 的 Performance Timings 中形成对应的火焰图数据。</p>\n<p><code class=\"language-text\">performance.measure</code> 也支持三个参数的调用，三个参数分别是 label 的名称，起始 mark 的名称以及终止 mark 的名称。如果省略最后一个参数，那么终止的时间点就是当前 <code class=\"language-text\">performance.measure</code> 调用的时间点。</p>\n<p>最后，通过 <code class=\"language-text\">performance.clearMarks</code> 及 <code class=\"language-text\">performance.clearMeasure</code> 删除标记，清理不必要的内存使用。</p>\n<p>更多的介绍，可以参考 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Performance\">MDN</a> 的文档。React 中也使用了类似的技术用于在 Performance 中生成每个 Component 渲染花费的时间，相关的代码可以参考 <a href=\"https://github.com/facebook/react/blob/50addf4c0e411e351de7290c8c60ec775c25c8c4/packages/react-reconciler/src/ReactDebugFiberPerf.js#L80\">ReactDebugFiberPerf.js</a>。</p>","frontmatter":{"title":"Performance Measure","category":"JavaScript","date":"2019-09-30"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"time":"2019-09-30","title":"Performance Measure","previous":{"time":"2019-09-29","title":"Mobile Shake"},"next":{"time":"2019-10-08","title":"Webpack Require Performance"}}}}