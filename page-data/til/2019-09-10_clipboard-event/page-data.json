{"componentChunkName":"component---src-templates-til-js","path":"/til/2019-09-10_clipboard-event","webpackCompilationHash":"d0c1c456129354e33ddb","result":{"data":{"markdownRemark":{"id":"f7451aff-6ab3-5bdd-8b2b-72f907953d51","html":"<p>JavaScript 提供了 copy 事件，可以针对一般的复制动作进行一些额外的操作。比如，一些网站出于版本的考虑，可能会禁止拷贝；或者，一些网站允许拷贝，但是会希望在拷贝的内容后面加上一些版权的声明。这些操作，都可以通过 copy 事件进行处理。</p>\n<p>举例来说，如果希望禁止网站上内容的拷贝，可以写：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'copy'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>在上面的代码中，通过 <code class=\"language-text\">event.preventDefault</code> API 的调用，可以组织浏览器默认的复制行为。这样，即使用户进行了复制，实际上剪贴板也不会被更新。</p>\n<p>第二个例子，假设希望在复制的内容后面加上额外的数据，可以写：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'copy'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> selection <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getSelection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> text <span class=\"token operator\">=</span> selection<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  event<span class=\"token punctuation\">.</span>clipboardData<span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token string\">'text/plain'</span><span class=\"token punctuation\">,</span> text <span class=\"token operator\">+</span> <span class=\"token string\">'\\nExtra Text at Bottom'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>需要注意几点：</p>\n<ol>\n<li><code class=\"language-text\">setData</code> 的第一个参数是数据的格式，支持的类型可以参考 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/types\">MDN</a>，主要就是 <a href=\"https://en.wikipedia.org/wiki/MIME\">MIME</a> 类型，一般纯文本可以使用 <code class=\"language-text\">text/plain</code></li>\n<li>在调用 <code class=\"language-text\">setData</code> 之后，需要调用 <code class=\"language-text\">event.preventDefault</code> 才能保证设置成功，否则最终复制出来的依然是原始的文案</li>\n</ol>\n<p>最后，需要说明的一点是：出于测试或者其他目的，JavaScript 也支持创建一个 ClipboardEvent 并发送给监听的元素，如：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'copy'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'copy event triggered'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  event<span class=\"token punctuation\">.</span>clipboardData<span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token string\">'text/plain'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'hello world'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> event <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ClipboardEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">'copy'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> clipboardData<span class=\"token punctuation\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataTransfer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">dispatchEvent</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>那么，回调函数可以正常执行（Console 可以看到输出），但是 event 内尝试设置 Clipboard 的数据并不会成功。</p>\n<p>总体上来说，浏览器端提供的 Copy 事件，只能获取/修改浏览器内发生的剪贴板复制操作；对于用户本身剪贴板操作内有的数据是无法读取的，在非用户触发的情况下，剪贴板的数据也是无法直接被修改的。</p>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/ClipboardEvent\">延伸阅读</a>。</p>","frontmatter":{"title":"Clipboard Event","category":"JavaScript","date":"2019-09-10"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"time":"2019-09-10","title":"Clipboard Event","previous":{"time":"2019-09-09","title":"Cypress Upload File"},"next":{"time":"2019-09-11","title":"BDO Element"}}}}