{"componentChunkName":"component---src-templates-til-js","path":"/til/2019-09-04_css-attribute-selector","webpackCompilationHash":"d0c1c456129354e33ddb","result":{"data":{"markdownRemark":{"id":"97d07229-1f07-5e5a-9835-184c70c8c6a7","html":"<p>CSS 中有一些属性选择器，不常见，但是偶尔有一些小众的需求，实现起来会很方便。特别是在进行 Cypress 开发的时候，直接使用 JavaScript 查找元素比较困难，但是有了这些属性选择器，就可以很方便的通过 jQuery 的 API 进行元素的定位了。</p>\n<p>属性选择器和一些可能的应用场景，列举如下：</p>\n<section><h2>attr</h2><p>表示带有以 <code class=\"language-text\">attr</code> 命名的属性元素。这个选择器不关心属性具体的值，只要有，就会被选中。一些常见的应用场景包括：</p><ul>\n<li>选择一些没有值的属性，比如 <code class=\"language-text\">&lt;input disabled /&gt;</code> 可以通过 <code class=\"language-text\">input[disabled]</code> 进行选择；</li>\n<li>选择一些带有属性的元素，属性具体的值并不关心。这种情况中，带有某种属性往往表示这类元素同属于一个类型组件，如一组列表中的每个元素，都会有一个子节点上带有 <code class=\"language-text\">title</code> 属性以显示 tooltip，此时就可以通过类似 <code class=\"language-text\">ul li [title]</code> 的方式，将这些文字都选出来，或是进行进一步的选择。</li>\n</ul></section>\n<section><h2>attr=value</h2><p>表示带有以 <code class=\"language-text\">attr</code> 命名的属性，并且该属性的值是 <code class=\"language-text\">value</code>。这个的应用场景比较常见，一般的属性选择都会使用这个方案。值得注意的一点是，由于 CSS 选择器权重的关系，以下两个 CSS 定义是有不同优先级的：</p><div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">#id</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">[id=id]</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> blue<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div><p>最终的元素 <code class=\"language-text\">&lt;p id=&quot;id&quot;&gt;Hello World&lt;/p&gt;</code> 显示颜色是红色，而不是蓝色。因为属性选择器的优先级比 id 选择器要低，即使两者表达的意思是一样的。</p></section>\n<section><h2>attr^=prefix</h2><p>这个选择器可以将所有以 <code class=\"language-text\">prefix</code> 开头的 <code class=\"language-text\">attr</code> 属性所在的元素都选出来。<code class=\"language-text\">^</code> 表示开头，这一点和正则表达式中的表述语义是类似的。可以设想这样一个应用场景：</p><p>在某个页面上，可能要根据一组数据显示对应的表单数据。因为每个表单中的输入项都需要一个 label + input 的组合，因而每个 input 可能需要给一个独一无二的 ID（方便 label 上加上 <code class=\"language-text\">for</code> 以绑定两者）。这时候，一个简单的做法，是给每一个表单中固定的输入项，取一个固定的前缀，再加上这个数据本身的 id 值，最终生成一个独一无二的 ID，防止重复。比如，数据 <code class=\"language-text\">{ id: 1, name: &#39;John&#39; }</code> 生成的名字 input 可能为：<code class=\"language-text\">&lt;input id=&quot;user-name-1&quot; /&gt;</code>。</p><p>针对这种情况，如果希望一次性选出所有这些 input，就可以使用属性选择器：<code class=\"language-text\">[id^=user-name]</code>。</p></section>\n<section><h2>attr|=prefix</h2><p>上面的这个例子，也可以用这个属性选择器来进行改写：<code class=\"language-text\">[id|=user-name]</code>。两者都可以定义属性的前缀用于查找元素，但是区别在于，<code class=\"language-text\">|=</code> 的选择器规定的前缀之后一定跟着一个 <code class=\"language-text\">-</code> 字符。因此，<code class=\"language-text\">[id|=user-name]</code> 可以选出 <code class=\"language-text\">&lt;input id=&quot;user-name-1&quot; /&gt;</code> 但是不能选出 <code class=\"language-text\">&lt;input id=&quot;user-name_1&quot; /&gt;</code>。这一点是和上面这个选择器最大的不同。当然，这个选择器最大的应用场景其实还是在选择 <code class=\"language-text\">lang</code> 上，比如将当前页面中所有英文的部分选择出来：<code class=\"language-text\">[lang|=en]</code>，此时，无论是 <code class=\"language-text\">&lt;p lang=&quot;en-US&quot;&gt;Color&lt;/p&gt;</code> 还是 <code class=\"language-text\">&lt;p lang=&quot;en-GB&quot;&gt;Colour&lt;/p&gt;</code> 都可以被正确的选择出来。</p></section>\n<section><h2>attr$=suffix</h2><p>这个选择器可以将所有以 <code class=\"language-text\">suffix</code> 结尾的 <code class=\"language-text\">attr</code> 属性所在的元素都选出来。<code class=\"language-text\">$</code> 表示结尾，这一点和正则表达式中的表述语义是类似的。一个可能的例子是：在 Ant Design 中，<a href=\"https://ant.design/components/icon/\">Icon</a> 组件会根据当前网页的语言，显示 <code class=\"language-text\">aria-label=&quot;icon: right&quot;</code> 或 <code class=\"language-text\">aria-label=&quot;图标: right&quot;</code>。如果要根据当前选择的语言去分别创建选择器，会有一些麻烦，这时候可以考虑直接使用 <code class=\"language-text\">[aria-label$=right]</code> 来进行选择。</p></section>\n<section><h2>attr*=keyword</h2><p>这个选择器可以将所有 <code class=\"language-text\">attr</code> 中带有 <code class=\"language-text\">keyword</code> 字段的元素都选出来。暂时没有遇到什么实际的应用场景，但是可以考虑用作属性的文案检查器。比如，原先的产品名字叫 AAA，但是后期业务调整，名字改成了 BBB，那么下面的 CSS 就可以将所有还没有改过来的元素都标注出来：</p><div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">[class*=AAA], [aria-label*=AAA]</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div></section>\n<section><h2>参考文档</h2><p><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors\">MDN</a></p></section>","frontmatter":{"title":"CSS Attribute Selector","category":"CSS","date":"2019-09-04"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"time":"2019-09-04","title":"CSS Attribute Selector","previous":{"time":"2019-09-03","title":"Eval Script via Nodejs"},"next":{"time":"2019-09-05","title":"URLSearchParams"}}}}