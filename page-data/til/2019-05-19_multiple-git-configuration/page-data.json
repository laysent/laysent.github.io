{"componentChunkName":"component---src-templates-til-js","path":"/til/2019-05-19_multiple-git-configuration","webpackCompilationHash":"d0c1c456129354e33ddb","result":{"data":{"markdownRemark":{"id":"c055ca35-123a-5708-b99a-56d5c8900e2a","html":"<p>对于有多个 Git 仓库的情况，不同的仓库可能需要配置不同的用户信息。</p>\n<p>一种麻烦的方案是，每个仓库都配置一个本地的 Git 配置，不使用全局的设置，就不会有问题。但是这样配置非常的麻烦，也容易忘。Git 提供了配置覆盖的功能，可以指定某一子目录，使用另外一个指定的 Git 配置覆盖默认的全剧配置。</p>\n<p>如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[includeIf &quot;gitdir:~/work/github/&quot;]\n    path = ~/work/github/.gitconfig</code></pre></div>\n<p>这个配置指定了在 <code class=\"language-text\">~/work/github/</code> 目录下，除了全局的 <code class=\"language-text\">.gitconfig</code> 文件之外，读取 <code class=\"language-text\">~/work/github/.gitconfig</code> 文件对配置进行覆盖改写。在 <code class=\"language-text\">~/work/github/.gitconfig</code> 的优先级高于 <code class=\"language-text\">~/.gitconfig</code> 的配置，会优先使用，没有定义的部分才会去全局中找。</p>","frontmatter":{"title":"Multiple Git Configuration","category":"Git","date":"2019-05-19"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"time":"2019-05-19","title":"Multiple Git Configuration","previous":{"time":"2019-05-17","title":"Command to enter folder after git clone"},"next":{"time":"2019-05-20","title":"classnames & css module"}}}}