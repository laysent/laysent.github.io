{"componentChunkName":"component---src-templates-til-js","path":"/til/2019-09-09_cypress-upload-file","result":{"data":{"markdownRemark":{"id":"f6537ed2-3963-51f7-ab53-09216b37cac3","html":"<p>Cypress 没有提供原生的上传文件支持，如果需要在 E2E 测试中进行文件上传的测试工作，最简单的方式就是自己写一个自定义的 Command。参考代码如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">Cypress<span class=\"token punctuation\">.</span>Commands<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'uploadFile'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> prevSubject<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span>subject<span class=\"token punctuation\">,</span> fixtureFileName<span class=\"token punctuation\">,</span> mimeType <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> cy<span class=\"token punctuation\">.</span><span class=\"token function\">fixture</span><span class=\"token punctuation\">(</span>fixtureFileName<span class=\"token punctuation\">,</span> <span class=\"token string\">'base64'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>Cypress<span class=\"token punctuation\">.</span>Blob<span class=\"token punctuation\">.</span>base64StringToBlob<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">blob</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> el <span class=\"token operator\">=</span> subject<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">const</span> nameSegments <span class=\"token operator\">=</span> fixtureFileName<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> nameSegments<span class=\"token punctuation\">[</span>nameSegments<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">const</span> testFile <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>blob<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> type<span class=\"token punctuation\">:</span> mimeType <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">const</span> dataTransfer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataTransfer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          dataTransfer<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>testFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n          <span class=\"token keyword\">const</span> setter <span class=\"token operator\">=</span>\n            Object<span class=\"token punctuation\">.</span><span class=\"token function\">getOwnPropertyDescriptor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HTMLInputElement</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">,</span> <span class=\"token string\">'files'</span><span class=\"token punctuation\">)</span>\n              <span class=\"token punctuation\">.</span>set<span class=\"token punctuation\">;</span>\n          <span class=\"token function\">setter</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>el<span class=\"token punctuation\">,</span> dataTransfer<span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n          <span class=\"token keyword\">const</span> event <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Event</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> bubbles<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          el<span class=\"token punctuation\">.</span><span class=\"token function\">dispatchEvent</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">return</span> subject<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>代码的解释如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">cy<span class=\"token punctuation\">.</span><span class=\"token function\">fixture</span><span class=\"token punctuation\">(</span>fixtureFileName<span class=\"token punctuation\">,</span> <span class=\"token string\">'base64'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><a href=\"https://docs.cypress.io/api/commands/fixture.html#Syntax\">fixture</a> 是 Cypress 提供的原生 API，可以读取 <code class=\"language-text\">cypress/fixture</code> 目录下的指定文件（文件名为 <code class=\"language-text\">fixtureFileName</code>）。上面这个 API 指定了文件需要以 Base64 的方式读取出来。</p>\n<p><code class=\"language-text\">Cypress.Blob.base64StringToBlob</code> 这一步顾名思义，就是将 Base64 字符串转化成对应的 Blob 类型。</p>\n<p>剩下的代码，就是用 JavaScript 的方式模拟一个文件上传事件。其中，需要先将文件从 Blob 转换成 File（这里涉及到可能的 mime type 检查）；然后，创建一个 DataTransfer 对象，把文件放进去，再赋值给 input（这里需要说明的是，React 组件会对 input 的属性做一层 proxy，因此直接使用 <code class=\"language-text\">input.files = dataTransfer.files</code> 这样的写法，调用的是 React 的方法而不是真正 DOM 的方法。按上面代码中的方法获取到真正的 setter，然后调用可以绕过去）。最后，在创建一个 Change 事件，传递给 input 组件，触发即可。</p>\n<p>当然，简单起见，可以直接使用现成的库：<code class=\"language-text\">cypress-file-upload</code>。GitHub 地址见<a href=\"https://github.com/abramenal/cypress-file-upload\">这里</a>。</p>","frontmatter":{"title":"Cypress Upload File","category":"Cypress","date":"2019-09-09"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"time":"2019-09-09","title":"Cypress Upload File","previous":{"time":"2019-09-08","title":"cypress reporter"},"next":{"time":"2019-09-10","title":"Clipboard Event"}}}}