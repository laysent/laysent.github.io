{"componentChunkName":"component---src-templates-til-js","path":"/til/2019-10-15_mousedown-to-click","webpackCompilationHash":"d0c1c456129354e33ddb","result":{"data":{"markdownRemark":{"id":"cd182026-2d57-5a6b-83b4-a7f384ce0957","html":"<p>在日常的开发过程中，对于一个按钮或者链接，一般会附上一个 <code class=\"language-text\">onClick</code> 事件，以响应用户的点击操作。当用户实际按下按钮或链接之后，再通过 <code class=\"language-text\">onClick</code> 事件去触发之后要进行的流程（比如网络请求或是链接跳转等）。</p>\n<p>如果对于用户操作后的反馈速度有一定的要求，这里的行为就需要进行优化。以链接为例，一个常见的操作方法是（比如 <a href=\"https://github.com/GoogleChromeLabs/quicklink\">quicklink</a>），用程序对可视范围内的链接地址进行预加载（使用 <code class=\"language-text\">prefetch</code>）。这样，当用户真正点击的时候，资源很可能已经得到了加载，打开速度就会显著提升。</p>\n<p>当然，这样的行为是没有预判的，纯粹暴力的进行可能的预备操作。如果预备操作损耗较多，这样的操作就显得不方便了。</p>\n<p>一个更加“智能”的操作是，仅当用户“点击”了之后才进行预加载。实际上，即使是一个点击的的操作，也会分成好几个不同的事件，包括 <code class=\"language-text\">MouseDown</code>，<code class=\"language-text\">MouseUp</code> 和 <code class=\"language-text\">Click</code>。在 <code class=\"language-text\">MouseDown</code> 和 <code class=\"language-text\">Click</code> 之间，差着大约 100ms 的时间。</p>\n<p>换句话说，如果在 <code class=\"language-text\">MouseDown</code> 的时候就开始预处理，等到 <code class=\"language-text\">Click</code> 时才真正进行加载，那么整体的加载时间会减少 100ms 左右。在某些情况下，这也是个不小的提升了。</p>\n<p>可以用下面的这段代码实际测试一下，<code class=\"language-text\">MouseDown</code> 事件和 <code class=\"language-text\">Click</code> 事件之间的时间差（具体时间差因人而异）：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> button <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nbutton<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Click Me'</span><span class=\"token punctuation\">;</span>\nbutton<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmousedown</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`Mousedown: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nbutton<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`Click: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>也可以直接点击下面这个按钮尝试：</p>\n<button onmousedown=\"window.__down=Date.now()\" onclick=\"this.textContent='Took:'+(Date.now() - window.__down)+' ms'\">\n  Click Me\n</button>\n<p></p>\n<p>当然，比这个略激进的操作，可以将 <code class=\"language-text\">MouseDown</code> 事件换成 <code class=\"language-text\">MouseEnter</code> 事件，这样在 Hover 的时候就会开始预加载。大概能提前 300ms 左右开始操作，当然存在一定的误判风险（比如用户只是划过了鼠标，并没有想要点击的意愿）。</p>\n<p>可以参考 <a href=\"http://instantclick.io/\">InstantClick</a> 了解更多实现的细节。</p>","frontmatter":{"title":"MouseDown to Click","category":"JavaScript","date":"2019-10-15"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"time":"2019-10-15","title":"MouseDown to Click","previous":{"time":"2019-10-14","title":"Parse GitConfig via Node"},"next":{"time":"2019-10-16","title":"Require Strategy in Electron"}}}}