{"componentChunkName":"component---src-templates-til-js","path":"/til/2019-07-25_execute-bash-in-docker","result":{"data":{"markdownRemark":{"id":"e2354d18-f7fe-5c38-aab3-1be6a207c601","html":"<p>在 Docker 开发的过程中，有时会有脚本出错，导致执行结果不及预期的情况。这种错误有时是环境导致的，在非 Docker 环境下无法重现。如果需要通过构建 Docker 添加诸如日志之类的信息来了解具体可能出错的原因，不免有些曲折。可以考虑直接在 Docker 环境下运行 Bash 命令，通过执行脚本中的语句，来查找可能出现问题的原因。</p>\n<p>要在 Docker 环境下执行 Bash 脚本，可以遵循以下的步骤：</p>\n<ol>\n<li>首先，需要知道当前运行 Docker 的容器 ID</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">docker container <span class=\"token function\">ls</span></code></pre></div>\n<p>上述命令会列出所有的容器，找到需要调试的那一个即可。</p>\n<ol start=\"2\">\n<li>在该容器环境内执行 Bash 命令</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">docker <span class=\"token builtin class-name\">exec</span> -ti xxx /bin/bash</code></pre></div>\n<p>这里，<code class=\"language-text\">xxx</code> 就是第一步找到的 Container ID。上述命令用到了两个参数，<code class=\"language-text\">-t</code> 和 <code class=\"language-text\">-i</code>。<code class=\"language-text\">-t</code> 是 <code class=\"language-text\">--tty</code> 的缩写，用于让 Docker 将用户的终端和 stdin/stdout 关联起来；<code class=\"language-text\">-i</code> 是 <code class=\"language-text\">--interactive</code> 的缩写，用于让 Docker 在执行命令的时候允许用户进行交互式的输入输出。</p>\n<p>如果只是希望执行一个语句并输出结果（比如 <code class=\"language-text\">echo</code> 一个字符串），那么 <code class=\"language-text\">-t</code> 就足够了，不需要 <code class=\"language-text\">-i</code>。但是对于需要在 Docker 环境下输入 Bash 命令并检查执行结果的情况来说，<code class=\"language-text\">-i</code> 就是必须的。</p>\n<p>一个输出 Hello World 的简单例子：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">docker <span class=\"token builtin class-name\">exec</span> -t <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"hello world\"</span></code></pre></div>\n<p>另外，可以通过如下的命令知道，<code class=\"language-text\">docker exec</code> 运行的默认环境是在 <code class=\"language-text\">/</code> 下：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">docker <span class=\"token builtin class-name\">exec</span> -t <span class=\"token builtin class-name\">pwd</span> <span class=\"token comment\"># output: /</span></code></pre></div>\n<p>如需修改这一默认行为，可以通过 <code class=\"language-text\">-w</code> 参数（或 <code class=\"language-text\">--workdir</code>）来执行：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">docker <span class=\"token builtin class-name\">exec</span> -w /root -t xxx <span class=\"token builtin class-name\">pwd</span> <span class=\"token comment\"># output: /root</span></code></pre></div>","frontmatter":{"title":"Execute Bash in Docker","category":"Docker","date":"2019-07-25"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"time":"2019-07-25","title":"Execute Bash in Docker","previous":{"time":"2019-07-24","title":"Alpine Mirror"},"next":{"time":"2019-07-26","title":"Import Chunkname with Babel Plugin"}}}}