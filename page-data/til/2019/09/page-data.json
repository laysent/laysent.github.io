{"componentChunkName":"component---src-templates-til-per-month-js","path":"/til/2019/09","webpackCompilationHash":"e6ece375915cc981625d","result":{"data":{"site":{"siteMetadata":{"title":"LaySent's Site"}},"allMarkdownRemark":{"edges":[{"node":{"id":"50775b1d-7fc1-5e13-9eb0-5ff1ab27876e","html":"<p>根据 TSLint 官方给出的建议，TypeScript 项目的代码，现在也推荐使用 ESLint 来进行代码规范的检查。</p>\n<p>在具体使用的时候，需要在 <code class=\"language-text\">.eslintrc</code> 中增加如下部分的设置：</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"parser\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"@typescript-eslint/parser\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"plugins\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"@typescript-eslint\"</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"parserOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"ecmaVersion\"</span><span class=\"token operator\">:</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"sourceType\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"module\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"project\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./tsconfig.json\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"ecmaFeatures\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"jsx\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>其中，需要用到 <code class=\"language-text\">typescript-eslint</code> 这个库来帮助 ESLint 解析代码（<a href=\"https://github.com/typescript-eslint/typescript-eslint\">GitHub</a>）。</p>\n<p>然而，在实际使用 ESLint 来检查 TypeScript 代码的时候，需要额外注意一个细节：</p>\n<p>根据<a href=\"https://github.com/typescript-eslint/typescript-eslint/issues/355#issuecomment-473353680\">这里</a>给出的解释，ESLint 默认情况下并不会检查非 <code class=\"language-text\">.js</code> 和 <code class=\"language-text\">.jsx</code> 结尾的文件。也就是说，如果 <code class=\"language-text\">src</code> 目录下有以下几个文件：<code class=\"language-text\">src/index.js</code>，<code class=\"language-text\">src/app.tsx</code>，<code class=\"language-text\">src/utils.ts</code>，那么在运行命令 <code class=\"language-text\">eslint src</code> 的时候，只有 <code class=\"language-text\">src/index.js</code> 会被检查，剩下的两个会直接被忽略。</p>\n<p>需要检查 TypeScript 的代码，需要手动在调用 <code class=\"language-text\">eslint</code> 命令行的时候加上 <code class=\"language-text\">--ext</code> 参数，如：<code class=\"language-text\">--ext js,jsx,ts,tsx</code>。</p>\n<p>当然，如果给 ESLint 手动指定需要检查的文件，或是通过 <code class=\"language-text\">lint-staged</code> 工具在 Git 签入的时候对 TypeScript 文件进行检查，这些情况下都是不需要额外指定 <code class=\"language-text\">--ext</code> 参数的，ESLint 可以正确处理 TypeScript 的代码。</p>","frontmatter":{"date":"2019-09-02","title":"ESlint for TypeScript","category":"Tool"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"startInMonth":"2019-09-01","endInMonth":"2019-09-31","time":"2019-09","previous":"2019-08","next":null}}}