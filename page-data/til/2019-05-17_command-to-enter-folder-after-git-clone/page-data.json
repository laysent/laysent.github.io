{"componentChunkName":"component---src-templates-til-js","path":"/til/2019-05-17_command-to-enter-folder-after-git-clone","webpackCompilationHash":"d0c1c456129354e33ddb","result":{"data":{"markdownRemark":{"id":"12c6876d-9c2a-557c-829e-8ca5da20129a","html":"<p>下面的脚本，执行之后，可以完成 <code class=\"language-text\">git clone</code> 并 <code class=\"language-text\">cd</code> 至目标文件夹内。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">!</span>f<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  local tmp<span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>mktemp<span class=\"token variable\">)</span></span><span class=\"token punctuation\">;</span>\n  local repo_name<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">git</span> clone <span class=\"token variable\">$@</span> --progress 2<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span>1 <span class=\"token operator\">|</span> <span class=\"token function\">tee</span> <span class=\"token variable\">$tmp</span><span class=\"token punctuation\">;</span>\n  repo_name<span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">awk</span> -F\\<span class=\"token string\">' '</span>/Cloning into/ <span class=\"token punctuation\">{</span>print $2<span class=\"token punctuation\">}</span>' $tmp<span class=\"token variable\">)</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">rm</span> <span class=\"token variable\">$tmp</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">cd</span> <span class=\"token variable\">$repo_name</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nf</code></pre></div>\n<p>一些说明：</p>\n<ul>\n<li><code class=\"language-text\">mktemp</code> 可以创建一个临时文件，文件路径存放在 <code class=\"language-text\">tmp</code> 变量中</li>\n<li><code class=\"language-text\">git clone $@</code> 中的 <code class=\"language-text\">$@</code> 是执行脚本时候所有的传入参数</li>\n<li><code class=\"language-text\">---progress 2&gt;&amp;1</code> 会将 Git clone 命令的结果输出。这里，默认情况下，clone 的过程数据只有在 error stream 输出到 terminal 的时候，才会显示。因为这里的命令需要将内容通过管道输出到 <code class=\"language-text\">tmp</code> 临时文件中，所以默认情况下 Git 就不会输出过程的数据了。为了能够让 Git 输出这部分内容，需要加上 <code class=\"language-text\">--progress</code></li>\n<li><code class=\"language-text\">tee $tmp</code> 将管道的数据输出到临时文件中</li>\n<li><code class=\"language-text\">awk -F\\&#39; &#39;/Cloning into/ {print $2}&#39; $tmp</code> 的部分，会从输出的数据中，寻找 <code class=\"language-text\">Cloning into</code> 的输出，然后找到具体 clone 到了哪个文件夹中</li>\n</ul>","frontmatter":{"title":"Command to enter folder after git clone","category":"Git","date":"2019-05-17"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"time":"2019-05-17","title":"Command to enter folder after git clone","previous":{"time":"2019-05-16","title":"Object.create(null)"},"next":{"time":"2019-05-19","title":"Multiple Git Configuration"}}}}